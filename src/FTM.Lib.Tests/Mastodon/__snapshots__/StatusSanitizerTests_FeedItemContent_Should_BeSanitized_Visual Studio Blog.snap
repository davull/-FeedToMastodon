[
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251478",
    "raw": "<p><a href=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028.png\"><img fetchpriority=\"high\" decoding=\"async\" class=\"alignnone wp-image-251491 size-full\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028.png\" alt=\"Ignite banner showing session &quot;Discover GitHub Copilot's Untapped Potential in Visual Studio&quot; by Scott, Dalia, Jessie\" width=\"908\" height=\"503\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028.png 908w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028-300x166.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028-768x425.png 768w\" sizes=\"(max-width: 908px) 100vw, 908px\" /></a></p>\n<p>At this year’s Microsoft Ignite, it was truly exciting to see Scott, Dalia, and Jessie demo some of the most innovative features of GitHub Copilot that are transforming the developer experience in Visual Studio. From the breakout session, we highlighted five standout features that are pushing productivity to the next level. Whether you&#8217;re working on complex edits or crafting custom workflows, these tools showcase how AI can elevate your coding game in ways you never thought possible.</p>\n<p><div class=\"d-flex justify-content-left\"><a class=\"cta_button_link btn-primary mb-24\" href=\"https://ignite.microsoft.com/en-US/sessions/BRK141?source=sessions\" target=\"_blank\">Watch the Ignite Session Here</a></div></p>\n<p>*Note: It will take 24-48 hours after the session for the recording to be uploaded.</p>\n<h2>1. Copilot Edits: Collaborative Iterations</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251496\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2.png\" alt=\"Copilot Edits showing inline chat edits, and Copilot Edits entry point\" width=\"1048\" height=\"620\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2.png 1429w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2-300x177.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2-1024x606.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2-768x454.png 768w\" sizes=\"(max-width: 1048px) 100vw, 1048px\" /></p>\n<p>It was amazing to see Copilot Edits in action. This new editing surface is designed for seamless multi-file changes, making large-scale updates across your project feel effortless. Imagine needing to redesign your UI or implement logic that spans multiple files—Copilot handles it by generating a change plan tailored to your goals, without the usual headache of tracking dependencies manually.</p>\n<p>What makes this feature transformative is how Copilot analyzes your codebase, identifies the necessary edits through multiple files, and iterates on those changes while maintaining the context from your conversation history. And the best part? Visual Studio’s inline code previews let you review, modify, or accept suggestions directly in the IDE, making complex updates feel more like a smooth collaboration than a solo effort. This iterative approach ensures that Copilot evolves alongside your intentions, keeping you in control while streamlining your updates.</p>\n<h2>2. Vision: Code Smarter with Contextual Understanding</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251497\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-3.png\" alt=\"Picture of Copilot Chat with two screenshots in the prompt box (Vision)\" width=\"573\" height=\"400\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-3.png 573w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-3-300x209.png 300w\" sizes=\"(max-width: 573px) 100vw, 573px\" /></p>\n<p>This feature blew us away with its ability to process images and screenshots, allowing GitHub Copilot to instantly grasp your intentions, without the hassle of going back and forth, tediously describing UI changes.</p>\n<p>For instance, when updating a UI, you can simply paste screenshots of the current and desired states into Copilot. It analyzes the differences, determines the necessary changes, and suggests edits tailored to your goals. Vision bridges the gap between visual inputs and actionable suggestions, empowering developers to handle visually-oriented tasks with ease. It truly makes Copilot feel like a collaborative partner in your workflow.</p>\n<h2>3. Icebreakers: A Launchpad for Productivity</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251498\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-4.png\" alt=\"Icebreakers, 4 clickable prompts in the Copilot Chat window\" width=\"347\" height=\"431\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-4.png 347w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-4-242x300.png 242w\" sizes=\"(max-width: 347px) 100vw, 347px\" /></p>\n<p>We all know that getting started can sometimes feel like the hardest part, but Icebreakers make it so much easier. These curated starter prompts, like “Refactor my code” or “Add a new feature,” inspire action and guide your initial steps when facing common coding challenges. Seeing Scott demo how Icebreakers now support more complex, multi-step workflows was incredible. They seamlessly integrate with Copilot Edits, enabling actionable plans for even the most intricate tasks.</p>\n<p>Whether you&#8217;re navigating an unfamiliar codebase or tackling a large project, Icebreakers reduce cognitive load, giving you a clear starting point and boosting productivity right from the get-go. It was exciting to see how this feature now helps developers take control of complex tasks and move forward with confidence.</p>\n<h2>4. Function Calling: Bridging Gaps in Logic</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251499\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-5.png\" alt=\"A picture that describes how function calling work -- takes a vague prompt and finds references to fill in the gaps\" width=\"440\" height=\"418\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-5.png 440w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-5-300x285.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-5-24x24.png 24w\" sizes=\"(max-width: 440px) 100vw, 440px\" /></p>\n<p>Function Calling, which enhances GitHub Copilot&#8217;s ability to provide precise recommendations by automatically determining the relevant context and tools based on your natural language prompts. Copilot seamlessly integrates the necessary context, saving you time and effort.</p>\n<p>Function Calling streamlines the process by dynamically accessing open files and project structure, eliminating the need to manually specify paths. This makes debugging and integration faster and more efficient. Watching them demo this feature was a highlight, as they showed how quickly developers can go from idea to implementation with Copilot’s context-aware functionality!</p>\n<h2>5. Custom Instructions: Your Copilot, Your Way</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251500\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6.png\" alt=\"Picture of copilot-instructions.md file and how it is referenced in a response. \" width=\"1430\" height=\"385\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6.png 1430w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6-300x81.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6-1024x276.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6-768x207.png 768w\" sizes=\"(max-width: 1430px) 100vw, 1430px\" /></p>\n<p>Custom Instructions allow Copilot to adapt to your unique team workflow. No two teams are alike, and seeing Jessie demonstrate how you can fine-tune Copilot’s behavior to align with your team’s coding conventions and communication style was truly amazing!</p>\n<p>With Custom Instructions, you can add team-specific practices to your Copilot instructions file, ensuring consistency across your codebase. This feature is a game-changer for teams who want to make their workflow more efficient while ensuring alignment with best practices.</p>\n<h2>Your New Development Sidekick</h2>\n<p>The advancements showcased at Ignite reaffirm GitHub Copilot’s role as a transformative tool for developers. From simplifying multi-file edits to embracing team-specific workflows, these features show how AI can be both powerful and adaptable.</p>\n<p>Try these features in Visual Studio today and see how GitHub Copilot can help you code smarter, faster, and with more confidence.</p>\n<p>Which feature are you most excited to try? Let us know in the comments below!</p>\n<p><div class=\"d-flex justify-content-left\"><a class=\"cta_button_link btn-primary mb-24\" href=\"https://visualstudio.microsoft.com/downloads/\" target=\"_blank\">Download Visual Studio 2022</a></div></p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/top-5-github-copilot-features-in-visual-studio-from-microsoft-ignite-2024/\">Top 5 GitHub Copilot Features in Visual Studio from Microsoft Ignite 2024</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "At this year’s Microsoft Ignite, it was truly exciting to see Scott, Dalia, and Jessie demo some of the most innovative features of GitHub Copilot that are transforming the developer experience in Visual Studio. From the breakout session, we highlighted five standout features that are pushing productivity to the next level. Whether you’re working on complex edits or crafting custom workflows, these tools showcase how AI can elevate your coding game in ways you never thought possible.\nWatch the Ignite Session Here\n*Note: It will take 24-48 hours after the session for the recording to be uploaded.\n1. Copilot Edits: Collaborative Iterations\n\nIt was amazing to see Copilot Edits in action. This new editing surface is designed for seamless multi-file changes, making large-scale updates across your project feel effortless. Imagine needing to redesign your UI or implement logic that spans multiple files—Copilot handles it by generating a change plan tailored to your goals, without the usual headache of tracking dependencies manually.\nWhat makes this feature transformative is how Copilot analyzes your codebase, identifies the necessary edits through multiple files, and iterates on those changes while maintaining the context from your conversation history. And the best part? Visual Studio’s inline code previews let you review, modify, or accept suggestions directly in the IDE, making complex updates feel more like a smooth collaboration than a solo effort. This iterative approach ensures that Copilot evolves alongside your intentions, keeping you in control while streamlining your updates.\n2. Vision: Code Smarter with Contextual Understanding\n\nThis feature blew us away with its ability to process images and screenshots, allowing GitHub Copilot to instantly grasp your intentions, without the hassle of going back and forth, tediously describing UI changes.\nFor instance, when updating a UI, you can simply paste screenshots of the current and desired states into Copilot. It analyzes the differences, determines the necessary changes, and suggests edits tailored to your goals. Vision bridges the gap between visual inputs and actionable suggestions, empowering developers to handle visually-oriented tasks with ease. It truly makes Copilot feel like a collaborative partner in your workflow.\n3. Icebreakers: A Launchpad for Productivity\n\nWe all know that getting started can sometimes feel like the hardest part, but Icebreakers make it so much easier. These curated starter prompts, like “Refactor my code” or “Add a new feature,” inspire action and guide your initial steps when facing common coding challenges. Seeing Scott demo how Icebreakers now support more complex, multi-step workflows was incredible. They seamlessly integrate with Copilot Edits, enabling actionable plans for even the most intricate tasks.\nWhether you’re navigating an unfamiliar codebase or tackling a large project, Icebreakers reduce cognitive load, giving you a clear starting point and boosting productivity right from the get-go. It was exciting to see how this feature now helps developers take control of complex tasks and move forward with confidence.\n4. Function Calling: Bridging Gaps in Logic\n\nFunction Calling, which enhances GitHub Copilot’s ability to provide precise recommendations by automatically determining the relevant context and tools based on your natural language prompts. Copilot seamlessly integrates the necessary context, saving you time and effort.\nFunction Calling streamlines the process by dynamically accessing open files and project structure, eliminating the need to manually specify paths. This makes debugging and integration faster and more efficient. Watching them demo this feature was a highlight, as they showed how quickly developers can go from idea to implementation with Copilot’s context-aware functionality!\n5. Custom Instructions: Your Copilot, Your Way\n\nCustom Instructions allow Copilot to adapt to your unique team workflow. No two teams are alike, and seeing Jessie demonstrate how you can fine-tune Copilot’s behavior to align with your team’s coding conventions and communication style was truly amazing!\nWith Custom Instructions, you can add team-specific practices to your Copilot instructions file, ensuring consistency across your codebase. This feature is a game-changer for teams who want to make their workflow more efficient while ensuring alignment with best practices.\nYour New Development Sidekick\nThe advancements showcased at Ignite reaffirm GitHub Copilot’s role as a transformative tool for developers. From simplifying multi-file edits to embracing team-specific workflows, these features show how AI can be both powerful and adaptable.\nTry these features in Visual Studio today and see how GitHub Copilot can help you code smarter, faster, and with more confidence.\nWhich feature are you most excited to try? Let us know in the comments below!\nDownload Visual Studio 2022\nThe post Top 5 GitHub Copilot Features in Visual Studio from Microsoft Ignite 2024 appeared first on Visual Studio Blog."
  },
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251450",
    "raw": "<p>The 12<sup>th</sup> update to Visual Studio 2022 is packed with lots of exciting new features that users have been asking for! Here are some of the awesome highlights from this release that are some of my personal favorites. For all the details, be sure to check out our <a href=\"https://learn.microsoft.com/visualstudio/releases/2022/release-notes\">release notes</a>.</p>\n<h2>Copy from the Error List</h2>\n<p>You see an error in the Error List that you don&#8217;t know how to fix. So, you select it and hit <strong>Ctrl+C</strong> to copy the description for a web search. After you&#8217;ve pasted it into the search engine, you realize it copied all column headers and row values instead of just the description. Now you must delete everything except the error description before you can perform the web search. This is cumbersome, but now we have a fix!</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251451\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-1.png\" alt=\"Select an error with options to Copy, Copy Row, and search for help on the Web\" width=\"801\" height=\"283\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-1.png 801w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-1-300x106.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-1-768x271.png 768w\" sizes=\"(max-width: 801px) 100vw, 801px\" /></p>\n<p>When you copy an error from the Error List using <strong>Ctrl+C</strong>, only the description is copied to the clipboard. This makes it easier to search for the error online or share it with others.</p>\n<p>You can still copy the entire row by right-clicking the error and selecting <strong>Copy Row</strong> from the context menu or hitting <strong>Ctrl+Shift+C</strong>.</p>\n<p>If what you wanted to do with the error description was to do a web search, then just hit Ctrl+F1 to search for information about the error online.</p>\n<h2>Go to line anywhere in code search</h2>\n<p>Sometimes you know that there&#8217;s an issue on a certain line in your code and you want to get to it quickly. Maybe you were told about an error being thrown on line 43 of some file, or you want to get to the bottom of a specific file.</p>\n<p>Code search now supports quick navigation to a specific line in your code.</p>\n<p>Open Code Search and go to a line in the current document by using colon + line number. For example, <strong>:39</strong> will navigate to line 39 in the active file.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251452\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-2.png\" alt=\"inputting :39 and cursor goes to line 39\" width=\"800\" height=\"534\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-2.png 800w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-2-300x200.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-2-768x513.png 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<p>You can also go to a line in a different document by using file name + colon + line number. For example<strong>, Order:43</strong> will navigate to line 43 in Order.cs. If you don&#8217;t specify the exact file name, then the search will try to find the best match.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251453\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-3.png\" alt=\"order:43 was entered and it took the curser to file Order line 43\" width=\"800\" height=\"534\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-3.png 800w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-3-300x200.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-3-768x513.png 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></p>\n<h2>Dock the code search window</h2>\n<p>If you need Code or Feature Search to stay out of your way, you now have more control over the behavior of the search window.</p>\n<p>You can now dock the search window and perform tool window actions with it, like Solution Explorer and others.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251454\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-4.png\" alt=\"Search window is docked below the code\" width=\"1200\" height=\"662\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-4.png 1200w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-4-300x166.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-4-1024x565.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-4-768x424.png 768w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<p>After opening <strong>Code Search</strong> or <strong>Feature Search</strong>, click on the box icon at the top right to convert it into a tool window. You may choose to dock it elsewhere, pop it out, auto-hide, etc. You can revert to the dismissible window by closing the tool window and reopening search.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251455\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-5.png\" alt=\"highlighting the convert to tool window option\" width=\"700\" height=\"235\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-5.png 700w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-5-300x101.png 300w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>We&#8217;ve also simplified and cleaned up the previewing experience in search. There is now one button, indicated with an eye icon, to toggle the preview on and off.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251456\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-6.png\" alt=\"highlighting the preview icon\" width=\"700\" height=\"235\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-6.png 700w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-6-300x101.png 300w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>The position of the preview panel will also adjust based on the dimensions of the search window.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251457\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-7.png\" alt=\"Search window on the right, size has been adjusted\" width=\"1200\" height=\"661\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-7.png 1200w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-7-300x165.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-7-1024x564.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-7-768x423.png 768w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<h2>Refresh the Find results</h2>\n<p>We heard from a lot of users that it&#8217;s frustrating having to reopen the Find window and go through the motions of redoing a search to get updated results. Maybe you just refactored some code and want to confirm everything has been changed as expected, or you pulled some recent changes and need your recent Find operation to reflect those updates.</p>\n<p>After completing <strong>Find in Files</strong>, you will now have the option to Refresh the Find results in the window. You&#8217;ll get your updated results without having to redo the search.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251458\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-8.png\" alt=\"highlighting the refresh icon\" width=\"1099\" height=\"334\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-8.png 1099w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-8-300x91.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-8-1024x311.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-8-768x233.png 768w\" sizes=\"(max-width: 1099px) 100vw, 1099px\" /></p>\n<p>We&#8217;ve also redesigned the former Repeat Find option to distinguish it from Refresh. It is now represented as Modify Find with a pencil icon. This button will still reopen Find in Files with the same search criteria you used for that results window.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251459\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-9.png\" alt=\"highlighting the modify find option\" width=\"1099\" height=\"334\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-9.png 1099w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-9-300x91.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-9-1024x311.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251450-9-768x233.png 768w\" sizes=\"(max-width: 1099px) 100vw, 1099px\" /></p>\n<h2>Copy files between instances</h2>\n<p>We are excited to introduce a highly requested feature in Visual Studio! You can now seamlessly copy and paste code files and folders between different Visual Studio instances using the Solution Explorer. Simply select the desired file or folder, use <strong>Ctrl+C</strong> or <strong>Ctrl+X</strong>, switch to another Visual Studio instance, and use <strong>Ctrl+V</strong> to include those files or folders in your new solution. All changes will be accurately reflected in the file system.</p>\n<p>In addition to copying and pasting, you can also drag the files and folders from one instance of Visual Studio to another.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251460\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screens-screenshot-of-a-computer-description-auto.gif\" alt=\"gif dragging an dropping files between instances of VS\" width=\"1280\" height=\"720\" /></p>\n<p>Previously, this functionality was available only for a few project types, but we have now expanded it to include all the major project types in Visual Studio.</p>\n<h2>Multi-project launch configuration</h2>\n<p>The Multi-Project Launch Configuration feature allows you to set up and save profiles for launching specific projects within a multi-project solution in predefined states for debugging.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251461\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica.gif\" alt=\"Gif showing the multi-launch config experience\" width=\"900\" height=\"506\" /></p>\n<p>This simplifies the process of working with complex solutions, improves debugging efficiency, and enables easy sharing of configurations among team members.</p>\n<h2>Thank you!</h2>\n<p>We deeply appreciate your valuable feedback and feature requests, which have been instrumental in shaping these updates. Your insights have a profound impact on our development process, and we are committed to continually enhancing your experience with Visual Studio. We encourage you to keep sharing your thoughts and suggestions, as they are vital in helping us make Visual Studio the best it can be. Thank you for your continued support and collaboration.</p>\n<p>Happy Coding!</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/making-you-more-productive-with-visual-studio-v17-12/\">Making you more productive with Visual Studio v17.12</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "The 12th update to Visual Studio 2022 is packed with lots of exciting new features that users have been asking for! Here are some of the awesome highlights from this release that are some of my personal favorites. For all the details, be sure to check out our release notes.\nCopy from the Error List\nYou see an error in the Error List that you don’t know how to fix. So, you select it and hit Ctrl+C to copy the description for a web search. After you’ve pasted it into the search engine, you realize it copied all column headers and row values instead of just the description. Now you must delete everything except the error description before you can perform the web search. This is cumbersome, but now we have a fix!\n\nWhen you copy an error from the Error List using Ctrl+C, only the description is copied to the clipboard. This makes it easier to search for the error online or share it with others.\nYou can still copy the entire row by right-clicking the error and selecting Copy Row from the context menu or hitting Ctrl+Shift+C.\nIf what you wanted to do with the error description was to do a web search, then just hit Ctrl+F1 to search for information about the error online.\nGo to line anywhere in code search\nSometimes you know that there’s an issue on a certain line in your code and you want to get to it quickly. Maybe you were told about an error being thrown on line 43 of some file, or you want to get to the bottom of a specific file.\nCode search now supports quick navigation to a specific line in your code.\nOpen Code Search and go to a line in the current document by using colon + line number. For example, :39 will navigate to line 39 in the active file.\n\nYou can also go to a line in a different document by using file name + colon + line number. For example, Order:43 will navigate to line 43 in Order.cs. If you don’t specify the exact file name, then the search will try to find the best match.\n\nDock the code search window\nIf you need Code or Feature Search to stay out of your way, you now have more control over the behavior of the search window.\nYou can now dock the search window and perform tool window actions with it, like Solution Explorer and others.\n\nAfter opening Code Search or Feature Search, click on the box icon at the top right to convert it into a tool window. You may choose to dock it elsewhere, pop it out, auto-hide, etc. You can revert to the dismissible window by closing the tool window and reopening search.\n\nWe’ve also simplified and cleaned up the previewing experience in search. There is now one button, indicated with an eye icon, to toggle the preview on and off.\n\nThe position of the preview panel will also adjust based on the dimensions of the search window.\n\nRefresh the Find results\nWe heard from a lot of users that it’s frustrating having to reopen the Find window and go through the motions of redoing a search to get updated results. Maybe you just refactored some code and want to confirm everything has been changed as expected, or you pulled some recent changes and need your recent Find operation to reflect those updates.\nAfter completing Find in Files, you will now have the option to Refresh the Find results in the window. You’ll get your updated results without having to redo the search.\n\nWe’ve also redesigned the former Repeat Find option to distinguish it from Refresh. It is now represented as Modify Find with a pencil icon. This button will still reopen Find in Files with the same search criteria you used for that results window.\n\nCopy files between instances\nWe are excited to introduce a highly requested feature in Visual Studio! You can now seamlessly copy and paste code files and folders between different Visual Studio instances using the Solution Explorer. Simply select the desired file or folder, use Ctrl+C or Ctrl+X, switch to another Visual Studio instance, and use Ctrl+V to include those files or folders in your new solution. All changes will be accurately reflected in the file system.\nIn addition to copying and pasting, you can also drag the files and folders from one instance of Visual Studio to another.\n\nPreviously, this functionality was available only for a few project types, but we have now expanded it to include all the major project types in Visual Studio.\nMulti-project launch configuration\nThe Multi-Project Launch Configuration feature allows you to set up and save profiles for launching specific projects within a multi-project solution in predefined states for debugging.\n\nThis simplifies the process of working with complex solutions, improves debugging efficiency, and enables easy sharing of configurations among team members.\nThank you!\nWe deeply appreciate your valuable feedback and feature requests, which have been instrumental in shaping these updates. Your insights have a profound impact on our development process, and we are committed to continually enhancing your experience with Visual Studio. We encourage you to keep sharing your thoughts and suggestions, as they are vital in helping us make Visual Studio the best it can be. Thank you for your continued support and collaboration.\nHappy Coding!\nThe post Making you more productive with Visual Studio v17.12 appeared first on Visual Studio Blog."
  },
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251424",
    "raw": "<p>Transferring code files between different instances of Visual Studio has often been a tedious task. To simplify this process, Visual Studio 2022 now includes a feature that allows you to easily copy and paste code files and folders between instances using the Solution Explorer. This enhancement aims to streamline workflow and save time.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251426\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251424-1.gif\" alt=\"gif showing how to drag and drop files into a different instance of VS\" width=\"1280\" height=\"720\" /></p>\n<p>Until now, moving code files and folders between different Visual Studio instances has been a hassle. Developers often had to manually relocate files, risking errors and inefficiencies in their workflow. With the new copy and paste functionality, this problem is now a thing of the past. Visual Studio 2022 makes it easier to manage your code files, regardless of the project type.</p>\n<h2>How the Feature Works</h2>\n<p>The process is straightforward:</p>\n<ul>\n<li>Select the desired file or folder: Navigate to the Solution Explorer and choose the code file or folder you wish to transfer.</li>\n<li>Use <strong>Ctrl+C</strong> or <strong>Ctrl+X</strong>: Copy or cut the selected file or folder.</li>\n<li>Switch to another Visual Studio instance: Open the instance where you want to paste the file or folder.</li>\n<li>Use <strong>Ctrl+V</strong>: Paste the file or folder. All changes will be accurately reflected in the file system.</li>\n</ul>\n<p>Additionally, you can also drag and drop files and folders between instances, providing even more flexibility in how you manage your projects.</p>\n<h2>Expanded Functionality</h2>\n<p>Previously, this feature was limited to a few specific project types. However, in response to <a href=\"https://developercommunity.visualstudio.com/t/Copy-and-paste-code-files-between-VS-ins/597595?q=copy+files&amp;fTime=allTime&amp;ftype=idea\">your feedback</a>, we’ve expanded this functionality to include all major project types in Visual Studio. Whether you are working on a web application, a desktop application, or a complex multi-project solution, you can now benefit from this streamlined capability.</p>\n<h2>Continuous Improvement</h2>\n<p>We are committed to making Visual Studio the best development environment available. Your feedback is invaluable to us, and it directly influences the improvements we make. This new feature is a testament to our dedication to listening to our users and enhancing their development experience.</p>\n<p>Thank you for your continued support and feedback. Together, we are making Visual Studio better every day.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/copy-files-across-instances-of-visual-studio/\">Copy files across instances of Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "Transferring code files between different instances of Visual Studio has often been a tedious task. To simplify this process, Visual Studio 2022 now includes a feature that allows you to easily copy and paste code files and folders between instances using the Solution Explorer. This enhancement aims to streamline workflow and save time.\n\nUntil now, moving code files and folders between different Visual Studio instances has been a hassle. Developers often had to manually relocate files, risking errors and inefficiencies in their workflow. With the new copy and paste functionality, this problem is now a thing of the past. Visual Studio 2022 makes it easier to manage your code files, regardless of the project type.\nHow the Feature Works\nThe process is straightforward:\n\nSelect the desired file or folder: Navigate to the Solution Explorer and choose the code file or folder you wish to transfer.\nUse Ctrl+C or Ctrl+X: Copy or cut the selected file or folder.\nSwitch to another Visual Studio instance: Open the instance where you want to paste the file or folder.\nUse Ctrl+V: Paste the file or folder. All changes will be accurately reflected in the file system.\n\nAdditionally, you can also drag and drop files and folders between instances, providing even more flexibility in how you manage your projects.\nExpanded Functionality\nPreviously, this feature was limited to a few specific project types. However, in response to your feedback, we’ve expanded this functionality to include all major project types in Visual Studio. Whether you are working on a web application, a desktop application, or a complex multi-project solution, you can now benefit from this streamlined capability.\nContinuous Improvement\nWe are committed to making Visual Studio the best development environment available. Your feedback is invaluable to us, and it directly influences the improvements we make. This new feature is a testament to our dedication to listening to our users and enhancing their development experience.\nThank you for your continued support and feedback. Together, we are making Visual Studio better every day.\nThe post Copy files across instances of Visual Studio appeared first on Visual Studio Blog."
  },
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251397",
    "raw": "<p>We continue to invest in the VisualStudio.Extensibility SDK to allow users like you to create extensions that run faster and smoother than ever before! VisualStudio.Extensibility helps you build extensions that run outside the main Visual Studio IDE process for improved performance and reliability, and can be installed without the need to restart Visual Studio. Additional benefits include a sleek and intuitive .NET 8-based API and comprehensive, well-maintained documentation to help you develop amazing extensions faster than ever before.</p>\n<p>This 17.12 release builds on our <a href=\"https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-11-settings-and-more-remote-ui-support/\">previous</a> releases and brings support for CodeLens in the editor. We&#8217;ve also addressed feedback from early users and revamped the output window API to make it easier to use.</p>\n<p><div class=\"d-flex justify-content-left\"><a class=\"cta_button_link btn-primary mb-24\" href=\"https://learn.microsoft.com/visualstudio/extensibility/visualstudio.extensibility/visualstudio-extensibility?view=vs-2022\" target=\"_blank\">Get Started with VisualStudio.Extensibility</a></div></p>\n<p>For the latest up-to-date docs and installation instructions, visit <a href=\"https://aka.ms/VisualStudio.Extensibility\" target=\"_blank\" rel=\"noopener\">https://aka.ms/VisualStudio.Extensibility</a>. We encourage you to report bugs and suggest features via the <a href=\"https://aka.ms/VisualStudio.Extensibility/Issues\" target=\"_blank\" rel=\"noopener\">issue tracker</a> on our <a href=\"https://aka.ms/VisualStudio.Extensibility/Repo\" target=\"_blank\" rel=\"noopener\">GitHub repo</a>, where you can also find extension <a href=\"https://aka.ms/VisualStudio.Extensibility/Samples\" target=\"_blank\" rel=\"noopener\">samples</a> to help you get started.</p>\n<h2>What’s new for VisualStudio.Extensibility?</h2>\n<p>Our 17.12 release of VisualStudio.Extensibility includes the following features:</p>\n<ul>\n<li>Customized CodeLens experience in the Visual Studio editor by adding your own CodeLens provider (currently released as experimental API)</li>\n<li>Revamped output window API for better discoverability and ease of use</li>\n<li>Additional diagnostics information for debugging VisualStudio.Extensibility extensions</li>\n</ul>\n<p>As with previous releases, we continuously update our <a href=\"https://learn.microsoft.com/en-us/visualstudio/extensibility/visualstudio.extensibility/visualstudio-extensibility?view=vs-2022\">documentation</a> to reflect the latest features in version 17.12. We have also prepared a comprehensive guide that outlines the three different extensibility models for Visual Studio. This <a href=\"https://learn.microsoft.com/en-us/visualstudio/extensibility/visualstudio.extensibility/extensibility-models?view=vs-2022\">guide</a> explains why VisualStudio.Extensibility is the ideal choice for those new to writing extensions.</p>\n<h2>Provide your own CodeLens experience</h2>\n<p>CodeLens is an experience in the Visual Studio editor that allows developers like you to stay focused on your work and get contextual information about your code without ever leaving the editor. Using CodeLens, you can quickly find all references of code or see the pass rate of unit tests. With the release of 17.12, extenders can now create a custom CodeLens on supported languages provided by Visual Studio! CodeLens support in VisualStudio.Extensibility goes beyond what the Visual Studio SDK (VSSDK) offers in that it not only allows for custom UI to be displayed for your CodeLens; it also offers a way for users to interact with your custom CodeLens through invokable CodeLens.</p>\n<p>Check out this <a href=\"https://github.com/microsoft/VSExtensibility/tree/main/New_Extensibility_Model/Samples/CodeLensSample\">sample</a> to learn how you can create a custom interactive word counter CodeLens using this new API. The sample extension allows you to define what to search for and count its occurrences in a C# method block, all from the context of CodeLens!</p>\n<p><img decoding=\"async\" width=\"1345\" height=\"285\" class=\"wp-image-251399\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica.png\" alt=\"A screenshot of a computer Description automatically generated\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica.png 1345w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-300x64.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-1024x217.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-768x163.png 768w\" sizes=\"(max-width: 1345px) 100vw, 1345px\" /></p>\n<p>To get started on creating your own CodeLens provider, please review our documentation <a href=\"https://learn.microsoft.com/en-us/visualstudio/extensibility/visualstudio.extensibility/editor/editor?view=vs-2022#extending-visual-studio-editor-with-a-new-code-lens\">here</a>. CodeLens support is currently released as an experimental API. We welcome questions and suggestions on the API as we work to stabilize it. Note that we currently only allow CodeLenses to be added to existing languages supported by Visual Studio. Stay tuned for when we enable CodeLens support for arbitrary files.</p>\n<h2>Access the output window with ease</h2>\n<p>During 17.12, we revamped the APIs for writing to Visual Studio’s output window. The original APIs were one of the first APIs we migrated from VSSDK to VisualStudio.Extensibility and had started to show their age. In the time we’ve been working on the new model, we’ve iterated on the principles of API design and refined them. Looking back at the original output window APIs, we realized that they did not meet our standards for simplicity and ease of use. In the revamp, we abstracted away concepts like resource IDs and channels to provide a simpler interface, and we gave users multiple ways to write to the output window, including writing using string, <a href=\"https://learn.microsoft.com/en-us/dotnet/api/system.io.textwriter?view=net-8.0\">TextWriter</a>, or <a href=\"https://learn.microsoft.com/en-us/dotnet/api/system.io.pipelines.pipewriter?view=net-8.0\">PipeWriter</a>. Check out the updated <a href=\"https://learn.microsoft.com/en-us/visualstudio/extensibility/visualstudio.extensibility/output-window/output-window?view=vs-2022\">docs</a> and <a href=\"https://github.com/microsoft/VSExtensibility/tree/main/New_Extensibility_Model/Samples/OutputWindowSample\">sample</a> to see how you can utilize the new and improved APIs!</p>\n<p>Given that these original APIs were marked as preview, we changed them in accordance with our <a href=\"https://github.com/microsoft/VSExtensibility/blob/main/docs/experimental_apis.md\">preview API</a> guidance. For more information about breaking changes, refer to the <a href=\"https://github.com/microsoft/VSExtensibility/blob/main/docs/breaking_changes.md#Guidance-and-Expectations-Around-Breaking-Changes\">Breaking Changes article</a>.</p>\n<h2>Debug your extensions more easily</h2>\n<p>With this release, we’ve also updated the diagnostics explorer to better assist you in debugging VisualStudio.Extensibility extensions. We separated the diagnostics pages into 2 groups – extension centric and platform centric. This separation makes it simpler to find information specific to your extension versus information that’s about the underlying Visual Studio platform to get more contextual data.</p>\n<p><img decoding=\"async\" width=\"1027\" height=\"825\" class=\"wp-image-251400\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-1.png\" alt=\"A screenshot of a computer Description automatically generated\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-1.png 1027w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-1-300x241.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-1-1024x823.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-1-768x617.png 768w\" sizes=\"(max-width: 1027px) 100vw, 1027px\" /></p>\n<p><img decoding=\"async\" width=\"813\" height=\"819\" class=\"wp-image-251401\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-extension-specific-diagnostics-pag.png\" alt=\"A screenshot of extension specific diagnostics pages\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-extension-specific-diagnostics-pag.png 813w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-extension-specific-diagnostics-pag-298x300.png 298w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-extension-specific-diagnostics-pag-150x150.png 150w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-extension-specific-diagnostics-pag-768x774.png 768w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-extension-specific-diagnostics-pag-24x24.png 24w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-extension-specific-diagnostics-pag-48x48.png 48w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-extension-specific-diagnostics-pag-96x96.png 96w\" sizes=\"(max-width: 813px) 100vw, 813px\" /></p>\n<p>Our <a href=\"https://learn.microsoft.com/en-us/visualstudio/extensibility/visualstudio.extensibility/diagnostics/visualstudio-extensibility-diagnostics-extension?view=vs-2022\">documentation</a> goes into detail on what each of these pages provide. You can download the latest version of the diagnostics explorer from the Marketplace <a href=\"https://marketplace.visualstudio.com/items?itemName=vsext.VisualStudio-Extensibility-Diagnostics-Explorer\">here</a>.</p>\n<h2>We want to hear from you!</h2>\n<p>Since embarking on this journey to provide a new extensibility model for Visual Studio, our goal has always been to keep our ecosystem partners engaged. Besides regular blog posts like this one to update our customers of the latest additions to VisualStudio.Extensibility, we also have extensive and up-to-date <a href=\"http://aka.ms/VisualStudio.Extensibility\">documentation</a> on how to use the APIs, as well as <a href=\"https://www.youtube.com/playlist?list=PLReL099Y5nRc6m-CLanAhWGO3_7DD_1Nu\">media content</a> that gives a quick overview of VisualStudio.Extensibility. We also have 2 different channels for customers to interact with us to either report issues or suggest new features:</p>\n<ul>\n<li>GitHub: Our GitHub <a href=\"https://github.com/microsoft/VSExtensibility\">page</a> is the primary destination for extenders to ask questions or report issues with respect to creating extensions for Visual Studio. While we try our best to answer questions, we can’t always get to them in real time. Our goal is to eventually have the GitHub page be something that the community can help answer each other’s questions. That can only happen if more extenders adopt VisualStudio.Extensibility to build their extensions.</li>\n<li>Developer Community: We primarily use <a href=\"https://developercommunity.visualstudio.com/home\">Developer Community</a> to track feature requests. Occasionally, we’ll get issues created in our GitHub page that are related to a feature not yet implemented in VisualStudio.Extensibility. Our practice is to then turn that issue into a suggestion ticket and use that ticket to track upvotes and post updates. In our most recent releases, we closed 2 of these suggestion tickets with the implementation of settings last release, and the support for code lens this release. We encourage you to review the <a href=\"https://developercommunity.visualstudio.com/VisualStudio?q=%5BVisualStudio.Extensibility%5D&amp;ftype=idea\">current list of feature requests</a> for VisualStudio.Extensibility and upvote any most relevant to your scenarios.</li>\n</ul>\n<p>Keep those questions and suggestions coming! There are many things we take into consideration when planning our roadmap, but rest assured that customer feedback is something that’s always top of mind for us.</p>\n<p>Stay connected with the Visual Studio team by following us on <a href=\"https://www.youtube.com/@visualstudio\" target=\"_blank\" rel=\"noopener\">YouTube</a>, <a href=\"https://twitter.com/VisualStudio\" target=\"_blank\" rel=\"noopener\">Twitter</a>, <a href=\"https://www.linkedin.com/showcase/microsoft-visual-studio/\" target=\"_blank\" rel=\"noopener\">LinkedIn</a>, <a href=\"https://www.twitch.tv/visualstudio\" target=\"_blank\" rel=\"noopener\">Twitch</a> and on <a href=\"https://learn.microsoft.com/en-us/visualstudio/?view=vs-2022\" target=\"_blank\" rel=\"noopener\">Microsoft Learn</a>.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/visualstudio-extensibility-17-12-codelens-support-is-here/\">VisualStudio.Extensibility 17.12: CodeLens support is here!</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "We continue to invest in the VisualStudio.Extensibility SDK to allow users like you to create extensions that run faster and smoother than ever before! VisualStudio.Extensibility helps you build extensions that run outside the main Visual Studio IDE process for improved performance and reliability, and can be installed without the need to restart Visual Studio. Additional benefits include a sleek and intuitive .NET 8-based API and comprehensive, well-maintained documentation to help you develop amazing extensions faster than ever before.\nThis 17.12 release builds on our previous releases and brings support for CodeLens in the editor. We’ve also addressed feedback from early users and revamped the output window API to make it easier to use.\nGet Started with VisualStudio.Extensibility\nFor the latest up-to-date docs and installation instructions, visit https://aka.ms/VisualStudio.Extensibility. We encourage you to report bugs and suggest features via the issue tracker on our GitHub repo, where you can also find extension samples to help you get started.\nWhat’s new for VisualStudio.Extensibility?\nOur 17.12 release of VisualStudio.Extensibility includes the following features:\n\nCustomized CodeLens experience in the Visual Studio editor by adding your own CodeLens provider (currently released as experimental API)\nRevamped output window API for better discoverability and ease of use\nAdditional diagnostics information for debugging VisualStudio.Extensibility extensions\n\nAs with previous releases, we continuously update our documentation to reflect the latest features in version 17.12. We have also prepared a comprehensive guide that outlines the three different extensibility models for Visual Studio. This guide explains why VisualStudio.Extensibility is the ideal choice for those new to writing extensions.\nProvide your own CodeLens experience\nCodeLens is an experience in the Visual Studio editor that allows developers like you to stay focused on your work and get contextual information about your code without ever leaving the editor. Using CodeLens, you can quickly find all references of code or see the pass rate of unit tests. With the release of 17.12, extenders can now create a custom CodeLens on supported languages provided by Visual Studio! CodeLens support in VisualStudio.Extensibility goes beyond what the Visual Studio SDK (VSSDK) offers in that it not only allows for custom UI to be displayed for your CodeLens; it also offers a way for users to interact with your custom CodeLens through invokable CodeLens.\nCheck out this sample to learn how you can create a custom interactive word counter CodeLens using this new API. The sample extension allows you to define what to search for and count its occurrences in a C# method block, all from the context of CodeLens!\n\nTo get started on creating your own CodeLens provider, please review our documentation here. CodeLens support is currently released as an experimental API. We welcome questions and suggestions on the API as we work to stabilize it. Note that we currently only allow CodeLenses to be added to existing languages supported by Visual Studio. Stay tuned for when we enable CodeLens support for arbitrary files.\nAccess the output window with ease\nDuring 17.12, we revamped the APIs for writing to Visual Studio’s output window. The original APIs were one of the first APIs we migrated from VSSDK to VisualStudio.Extensibility and had started to show their age. In the time we’ve been working on the new model, we’ve iterated on the principles of API design and refined them. Looking back at the original output window APIs, we realized that they did not meet our standards for simplicity and ease of use. In the revamp, we abstracted away concepts like resource IDs and channels to provide a simpler interface, and we gave users multiple ways to write to the output window, including writing using string, TextWriter, or PipeWriter. Check out the updated docs and sample to see how you can utilize the new and improved APIs!\nGiven that these original APIs were marked as preview, we changed them in accordance with our preview API guidance. For more information about breaking changes, refer to the Breaking Changes article.\nDebug your extensions more easily\nWith this release, we’ve also updated the diagnostics explorer to better assist you in debugging VisualStudio.Extensibility extensions. We separated the diagnostics pages into 2 groups – extension centric and platform centric. This separation makes it simpler to find information specific to your extension versus information that’s about the underlying Visual Studio platform to get more contextual data.\n\n\nOur documentation goes into detail on what each of these pages provide. You can download the latest version of the diagnostics explorer from the Marketplace here.\nWe want to hear from you!\nSince embarking on this journey to provide a new extensibility model for Visual Studio, our goal has always been to keep our ecosystem partners engaged. Besides regular blog posts like this one to update our customers of the latest additions to VisualStudio.Extensibility, we also have extensive and up-to-date documentation on how to use the APIs, as well as media content that gives a quick overview of VisualStudio.Extensibility. We also have 2 different channels for customers to interact with us to either report issues or suggest new features:\n\nGitHub: Our GitHub page is the primary destination for extenders to ask questions or report issues with respect to creating extensions for Visual Studio. While we try our best to answer questions, we can’t always get to them in real time. Our goal is to eventually have the GitHub page be something that the community can help answer each other’s questions. That can only happen if more extenders adopt VisualStudio.Extensibility to build their extensions.\nDeveloper Community: We primarily use Developer Community to track feature requests. Occasionally, we’ll get issues created in our GitHub page that are related to a feature not yet implemented in VisualStudio.Extensibility. Our practice is to then turn that issue into a suggestion ticket and use that ticket to track upvotes and post updates. In our most recent releases, we closed 2 of these suggestion tickets with the implementation of settings last release, and the support for code lens this release. We encourage you to review the current list of feature requests for VisualStudio.Extensibility and upvote any most relevant to your scenarios.\n\nKeep those questions and suggestions coming! There are many things we take into consideration when planning our roadmap, but rest assured that customer feedback is something that’s always top of mind for us.\nStay connected with the Visual Studio team by following us on YouTube, Twitter, LinkedIn, Twitch and on Microsoft Learn.\nThe post VisualStudio.Extensibility 17.12: CodeLens support is here! appeared first on Visual Studio Blog."
  },
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251381",
    "raw": "<p>We are thrilled to announce the latest updates to Git tooling in Visual Studio, designed to enhance your development experience and streamline your workflow. These new features are in direct response to user feedback, ensuring that you have the tools you need to be more productive and efficient. For the full list, check out the <a href=\"https://learn.microsoft.com/visualstudio/releases/2022/release-notes-preview\">release notes</a>.</p>\n<h2>Pull request drafts and templates</h2>\n<p>You can now create pull request drafts and start your descriptions with GitHub templates in Visual Studio. These were the two top requests for the create a pull request experience.</p>\n<h3>Draft PRs</h3>\n<p>Use the drop-down menu on the <strong>Create</strong> button to <strong>Create as Draft</strong>.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251382\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-1.png\" alt=\"Create as Draft preview menu\" width=\"504\" height=\"284\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-1.png 504w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-1-300x169.png 300w\" sizes=\"(max-width: 504px) 100vw, 504px\" /></p>\n<h3>PR Templates</h3>\n<p>Your default PR template will be used when creating a new PR for both GitHub and Azure DevOps. Learn more about how to add a PR template to your repository in the <a href=\"https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository\">GitHub documentation</a> and <a href=\"https://review.learn.microsoft.com/en-us/azure/devops/repos/git/pull-request-templates#default-pull-request-templates\">Azure DevOps documentation</a>.</p>\n<h2>Create internal GitHub repos</h2>\n<p>Visual Studio now supports internal repos for your GitHub organizations. We also included guidance for each type of repository to give you more clarity on the visibility of the new project depending on which account you&#8217;re using.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251383\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-2.png\" alt=\"Create a new git repo menu\" width=\"854\" height=\"616\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-2.png 854w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-2-300x216.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-2-768x554.png 768w\" sizes=\"(max-width: 854px) 100vw, 854px\" /></p>\n<h2>Copy Git link</h2>\n<p>Whenever you share a few lines of code with a colleague, it can often be useful for them to get extra context from your repository. However, if they&#8217;re working on something else it can take too long and disrupt their work to checkout your branch.</p>\n<p>Now, you can highlight the code you want to share in your editor, open the context menu with a right click, and under the Git submenu get a shareable link to your code in GitHub or Azure DevOps. This makes it simple and easy to collaborate, and it smooths the flow between the IDE and your remote repos on the web.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251384\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-3.png\" alt=\"Git menu option showcasing copy GitHub permalink\" width=\"641\" height=\"360\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-3.png 641w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-3-300x168.png 300w\" sizes=\"(max-width: 641px) 100vw, 641px\" /></p>\n<p>You can also get shareable links directly from commit history. This allows for code not currently checked out or code that exists in previous iterations to be referenced just as effortlessly.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251385\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-4.png\" alt=\"Showing git history and grabbing permalink\" width=\"1000\" height=\"568\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-4.png 1000w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-4-300x170.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-4-768x436.png 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></p>\n<h2>Customize AI Git commit message</h2>\n<p>Now you can add additional instructions to the prompt for generating your Git commit message with GitHub Copilot. This allows you to customize the commit message to better fit your workflow and team&#8217;s standards. You can specify the number of lines to generate, the length of the lines, and even provide a sample commit style. Edit the message in the <strong>Tools &gt; Options &gt; Copilot &gt; Source Control &gt; Commit message additional instructions:</strong> prompt field.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251386\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-5.png\" alt=\"showing prompt field for git commit messages\" width=\"536\" height=\"242\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-5.png 536w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-5-300x135.png 300w\" sizes=\"(max-width: 536px) 100vw, 536px\" /></p>\n<h2>Git multi-repo support</h2>\n<p>You can now create pull requests and link work items in multi-repo scenarios. For both GitHub and Azure DevOps, we support your integrations when you use the repository picker to focus on a particular repository in your multi-repo scenarios.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251387\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-6.png\" alt=\"showcasing the filter repo option with 4 repos\" width=\"600\" height=\"338\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-6.png 600w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251381-6-300x169.png 300w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></p>\n<h2>Keep sharing your feedback!</h2>\n<p>We are continuously striving to improve and adapt to your needs, and your feedback is invaluable in this process. Thank you for your continued feedback and support. Your insights help us shape the tools and features that make your development experience more efficient and enjoyable.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/git-tooling-updates-in-visual-studio-17-12/\">Git tooling updates in Visual Studio 17.12</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "We are thrilled to announce the latest updates to Git tooling in Visual Studio, designed to enhance your development experience and streamline your workflow. These new features are in direct response to user feedback, ensuring that you have the tools you need to be more productive and efficient. For the full list, check out the release notes.\nPull request drafts and templates\nYou can now create pull request drafts and start your descriptions with GitHub templates in Visual Studio. These were the two top requests for the create a pull request experience.\nDraft PRs\nUse the drop-down menu on the Create button to Create as Draft.\n\nPR Templates\nYour default PR template will be used when creating a new PR for both GitHub and Azure DevOps. Learn more about how to add a PR template to your repository in the GitHub documentation and Azure DevOps documentation.\nCreate internal GitHub repos\nVisual Studio now supports internal repos for your GitHub organizations. We also included guidance for each type of repository to give you more clarity on the visibility of the new project depending on which account you’re using.\n\nCopy Git link\nWhenever you share a few lines of code with a colleague, it can often be useful for them to get extra context from your repository. However, if they’re working on something else it can take too long and disrupt their work to checkout your branch.\nNow, you can highlight the code you want to share in your editor, open the context menu with a right click, and under the Git submenu get a shareable link to your code in GitHub or Azure DevOps. This makes it simple and easy to collaborate, and it smooths the flow between the IDE and your remote repos on the web.\n\nYou can also get shareable links directly from commit history. This allows for code not currently checked out or code that exists in previous iterations to be referenced just as effortlessly.\n\nCustomize AI Git commit message\nNow you can add additional instructions to the prompt for generating your Git commit message with GitHub Copilot. This allows you to customize the commit message to better fit your workflow and team’s standards. You can specify the number of lines to generate, the length of the lines, and even provide a sample commit style. Edit the message in the Tools > Options > Copilot > Source Control > Commit message additional instructions: prompt field.\n\nGit multi-repo support\nYou can now create pull requests and link work items in multi-repo scenarios. For both GitHub and Azure DevOps, we support your integrations when you use the repository picker to focus on a particular repository in your multi-repo scenarios.\n\nKeep sharing your feedback!\nWe are continuously striving to improve and adapt to your needs, and your feedback is invaluable in this process. Thank you for your continued feedback and support. Your insights help us shape the tools and features that make your development experience more efficient and enjoyable.\nThe post Git tooling updates in Visual Studio 17.12 appeared first on Visual Studio Blog."
  },
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251336",
    "raw": "<p><img decoding=\"async\" class=\"alignnone wp-image-251337\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251336-1.jpeg\" alt=\"Image showing the session details with abstract art\" width=\"937\" height=\"527\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251336-1.jpeg 1430w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251336-1-300x169.jpeg 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251336-1-1024x576.jpeg 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251336-1-768x432.jpeg 768w\" sizes=\"(max-width: 937px) 100vw, 937px\" /></p>\n<p>Get ready for an exciting Microsoft Ignite breakout session where we’re unveiling the latest advancements in GitHub Copilot in Visual Studio! Join Dalia Abo Sheasha, Jessie Houghton, and Scott Hanselman as they dive into how GitHub Copilot is evolving to help developers work smarter, collaborate better, and achieve more.</p>\n<p><div class=\"d-flex justify-content-left\"><a class=\"cta_button_link btn-primary mb-24\" href=\"https://register.ignite.microsoft.com/\" target=\"_blank\">Register for Ignite now!</a></div></p>\n<p>Here’s a little preview of what we’ll be discussing:</p>\n<h3><strong>Enhanced AI-Powered Coding Experience</strong></h3>\n<p>We’ll be sharing some powerful new tools that make prompt crafting and code completion smoother than ever. Discover how GitHub Copilot’s conversational abilities are growing to bring even more clarity and productivity to your coding sessions.</p>\n<h3><strong>Customization and Collaboration</strong></h3>\n<p>Our team is pushing the boundaries on how GitHub Copilot can be tailored to meet your unique workflow and team needs. Learn about new options for customizing Copilot’s responses, from individual preferences to organization-level customizations that make collaboration easier.</p>\n<h3><strong>Advanced Search and Navigation</strong></h3>\n<p>Imagine navigating your codebase faster, with GitHub Copilot offering deeper insights right when you need them. We’ll highlight some exciting features designed to make finding, referencing, and editing code even more seamless.</p>\n<h3><strong>Intelligent Assistance for Debugging and Review</strong></h3>\n<p>Ever wish your AI assistant could help you pinpoint issues or suggest improvements? We’re teasing features that aim to do just that — turning GitHub Copilot into a smarter, more interactive debugging and review partner.</p>\n<h3><strong>The Future of GitHub Copilot</strong></h3>\n<p>Finally, Scott will wrap up with a look at what’s next for GitHub Copilot, including some steps toward a more integrated, intelligent development experience.</p>\n<h3><strong>Don’t Miss Out!</strong></h3>\n<p><img src=\"https://s.w.org/images/core/emoji/15.0.3/72x72/1f4c5.png\" alt=\"📅\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>Session Details</strong>\n<strong>Date</strong>: Wednesday, November 20\n<strong>Time</strong>: 1:45 PM &#8211; 2:30 PM Pacific Standard Time</p>\n<p><img src=\"https://s.w.org/images/core/emoji/15.0.3/72x72/1f449.png\" alt=\"👉\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <a href=\"https://ignite.microsoft.com/en-US/sessions/BRK141?source=sessions\">Watch the breakout session here</a> to see how GitHub Copilot is transforming from an assistive tool into an essential, dynamic coding companion. We can’t wait to share these updates with you!</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/join-us-at-microsoft-ignite-unlock-github-copilots-new-potential-in-visual-studio/\">Join Us at Microsoft Ignite: Unlock GitHub Copilot’s New Potential in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "Get ready for an exciting Microsoft Ignite breakout session where we’re unveiling the latest advancements in GitHub Copilot in Visual Studio! Join Dalia Abo Sheasha, Jessie Houghton, and Scott Hanselman as they dive into how GitHub Copilot is evolving to help developers work smarter, collaborate better, and achieve more.\nRegister for Ignite now!\nHere’s a little preview of what we’ll be discussing:\nEnhanced AI-Powered Coding Experience\nWe’ll be sharing some powerful new tools that make prompt crafting and code completion smoother than ever. Discover how GitHub Copilot’s conversational abilities are growing to bring even more clarity and productivity to your coding sessions.\nCustomization and Collaboration\nOur team is pushing the boundaries on how GitHub Copilot can be tailored to meet your unique workflow and team needs. Learn about new options for customizing Copilot’s responses, from individual preferences to organization-level customizations that make collaboration easier.\nAdvanced Search and Navigation\nImagine navigating your codebase faster, with GitHub Copilot offering deeper insights right when you need them. We’ll highlight some exciting features designed to make finding, referencing, and editing code even more seamless.\nIntelligent Assistance for Debugging and Review\nEver wish your AI assistant could help you pinpoint issues or suggest improvements? We’re teasing features that aim to do just that — turning GitHub Copilot into a smarter, more interactive debugging and review partner.\nThe Future of GitHub Copilot\nFinally, Scott will wrap up with a look at what’s next for GitHub Copilot, including some steps toward a more integrated, intelligent development experience.\nDon’t Miss Out!\n Session Details\nDate: Wednesday, November 20\nTime: 1:45 PM – 2:30 PM Pacific Standard Time\n Watch the breakout session here to see how GitHub Copilot is transforming from an assistive tool into an essential, dynamic coding companion. We can’t wait to share these updates with you!\nThe post Join Us at Microsoft Ignite: Unlock GitHub Copilot’s New Potential in Visual Studio appeared first on Visual Studio Blog."
  },
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251319",
    "raw": "<p>Looking to resolve code issues quickly? The new GitHub Copilot feature integrated into the lightbulb and error list in Visual Studio 2022 offers a valuable solution for developers. Whether you&#8217;re working in C# or C++, this feature will help you understand and address problems in your codebase more efficiently.</p>\n<p>The integration of GitHub Copilot into Visual Studio 2022 provides quick fixes and insightful explanations right at your fingertips. Say goodbye to sifting through documentation or conducting endless online searches to debug your code. The lightbulb and error list now offers direct access to GitHub Copilot&#8217;s AI capabilities, streamlining your development process.</p>\n<h2>Quick Fixes at Your Fingertips</h2>\n<p>To get started, simply invoke the lightbulb and select <strong>Fix with Copilot</strong>. This launches an <a id=\"post-251319-_Int_Zl34b9WC\"></a>inline chat with GitHub Copilot, offering you an available fix. This seamless interaction allows you to address issues at once, keeping your workflow uninterrupted.</p>\n<p><img decoding=\"async\" width=\"805\" height=\"236\" class=\"wp-image-251320\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/fix-code-with-github-copilot-from-the-lightbulb.png\" alt=\"Fix code with GitHub Copilot from the lightbulb\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/fix-code-with-github-copilot-from-the-lightbulb.png 805w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/fix-code-with-github-copilot-from-the-lightbulb-300x88.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/fix-code-with-github-copilot-from-the-lightbulb-768x225.png 768w\" sizes=\"(max-width: 805px) 100vw, 805px\" /></p>\n<h2>Insightful Explanations for Code Issues</h2>\n<p>Understanding errors in your code can be challenging, but with GitHub Copilot, clarity is just a click away. Select the GitHub Copilot icon from the error list to open the chat panel, where you&#8217;ll find detailed explanations and solutions for the error at hand.</p>\n<p><img decoding=\"async\" width=\"600\" height=\"169\" class=\"wp-image-251321\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/fix-code-with-github-copilot-from-the-error-list.png\" alt=\"Fix code with GitHub Copilot from the error list\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/fix-code-with-github-copilot-from-the-error-list.png 600w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/fix-code-with-github-copilot-from-the-error-list-300x85.png 300w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></p>\n<h2>Elevate Your Coding Experience</h2>\n<p>By integrating GitHub Copilot, Visual Studio 2022 enhances your coding experience, making it easier to tackle complex problems and improve code quality. We encourage you to explore this feature and see how GitHub Copilot can transform your coding experience.</p>\n<p>We deeply appreciate the continuous feedback from our users, which drives us to improve and innovate. Your input is invaluable in making Visual Studio better with each update. Happy coding!</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/fix-code-with-github-copilot/\">Fix Code with GitHub Copilot</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "Looking to resolve code issues quickly? The new GitHub Copilot feature integrated into the lightbulb and error list in Visual Studio 2022 offers a valuable solution for developers. Whether you’re working in C# or C++, this feature will help you understand and address problems in your codebase more efficiently.\nThe integration of GitHub Copilot into Visual Studio 2022 provides quick fixes and insightful explanations right at your fingertips. Say goodbye to sifting through documentation or conducting endless online searches to debug your code. The lightbulb and error list now offers direct access to GitHub Copilot’s AI capabilities, streamlining your development process.\nQuick Fixes at Your Fingertips\nTo get started, simply invoke the lightbulb and select Fix with Copilot. This launches an inline chat with GitHub Copilot, offering you an available fix. This seamless interaction allows you to address issues at once, keeping your workflow uninterrupted.\n\nInsightful Explanations for Code Issues\nUnderstanding errors in your code can be challenging, but with GitHub Copilot, clarity is just a click away. Select the GitHub Copilot icon from the error list to open the chat panel, where you’ll find detailed explanations and solutions for the error at hand.\n\nElevate Your Coding Experience\nBy integrating GitHub Copilot, Visual Studio 2022 enhances your coding experience, making it easier to tackle complex problems and improve code quality. We encourage you to explore this feature and see how GitHub Copilot can transform your coding experience.\nWe deeply appreciate the continuous feedback from our users, which drives us to improve and innovate. Your input is invaluable in making Visual Studio better with each update. Happy coding!\nThe post Fix Code with GitHub Copilot appeared first on Visual Studio Blog."
  },
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251307",
    "raw": "<p><span data-contrast=\"none\">We’re excited to announce the availability of Visual Studio 2022 v17.13 Preview 1 – the first preview of our next update to Visual Studio. This update focuses on providing fantastic developer experiences across the board, with a focus on </span><b><span data-contrast=\"none\">stability &amp; security</span></b><span data-contrast=\"none\">, and </span><b><span data-contrast=\"none\">AI &amp; productivity.</span></b> <a href=\"https://visualstudio.microsoft.com/vs/preview/\"><span data-contrast=\"none\">Download the preview</span></a><span data-contrast=\"none\"> and see the full list of enhancements in the </span><a href=\"https://learn.microsoft.com/visualstudio/releases/2022/release-notes-preview\"><span data-contrast=\"none\">release notes</span></a><span data-contrast=\"none\">.</span><span data-ccp-props=\"{&quot;335559739&quot;:0}\"> </span><span data-ccp-props=\"{&quot;134245418&quot;:true,&quot;134245529&quot;:true,&quot;335559738&quot;:40,&quot;335559739&quot;:0}\"> </span></p>\n<p><a href=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/VS-Preview-Release.png\"><img decoding=\"async\" class=\"wp-image-251311 aligncenter\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/VS-Preview-Release.png\" alt=\"Image VS Preview Release\" width=\"1015\" height=\"416\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/VS-Preview-Release.png 624w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/VS-Preview-Release-300x123.png 300w\" sizes=\"(max-width: 1015px) 100vw, 1015px\" /></a></p>\n<h2 aria-level=\"2\"><span data-contrast=\"none\">Quality &amp; security</span><span data-ccp-props=\"{&quot;134245418&quot;:true,&quot;134245529&quot;:true,&quot;335559738&quot;:40,&quot;335559739&quot;:0}\"> </span></h2>\n<p><span data-contrast=\"auto\">Ensuring the highest standards of quality and security is paramount. Visual Studio 2022 v17.13 incorporates robust quality and security enhancements designed to provide a seamless and secure development environment. With improved diagnostics and debugging tools, developers can now identify and resolve issues more efficiently, leading to more reliable and stable applications. Furthermore, enhanced security features offer protection against potential threats, safeguarding your code and data. These improvements not only streamline your workflow but also bolster your confidence in delivering high-quality, secure software solutions.</span><span data-ccp-props=\"{&quot;335559739&quot;:0}\"> </span></p>\n<h2 aria-level=\"2\"><span data-contrast=\"none\">AI &amp; productivity</span><span data-ccp-props=\"{&quot;134245418&quot;:true,&quot;134245529&quot;:true,&quot;335559738&quot;:40,&quot;335559739&quot;:0}\"> </span></h2>\n<p><span data-contrast=\"auto\">Visual Studio 2022 v17.13 integrates advanced AI to boost developer productivity by automating routine tasks, offering intelligent code suggestions, and enhancing coding efficiency. With AI-assisted code completion, refactoring tools, and personalized insights, developers can write cleaner, more efficient code and focus on complex, creative aspects of their projects, ultimately accelerating development cycles. This new release also brings general productivity improvements across the IDE, making it a robust tool for developers at every level.</span><span data-ccp-props=\"{&quot;335559739&quot;:0}\"> </span></p>\n<p>&nbsp;</p>\n<p><div class=\"d-flex justify-content-left\"><a class=\"cta_button_link btn-primary mb-24\" href=\"https://visualstudio.microsoft.com/vs/preview/\" target=\"_blank\">Download Visual Studio Preview</a></div></p>\n<p><span data-contrast=\"none\">We hope you enjoy this preview of Visual Studio, and we look forward to hearing what you think. You can share feedback with us via </span><a href=\"https://developercommunity.visualstudio.com/home\"><span data-contrast=\"none\">Developer Community</span></a><span data-contrast=\"none\">, by reporting issues via </span><a href=\"https://learn.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2022\"><span data-contrast=\"none\">report a problem</span></a><span data-contrast=\"none\"> and </span><a href=\"https://developercommunity.microsoft.com/VisualStudio/suggest\"><span data-contrast=\"none\">share your suggestions</span></a><span data-contrast=\"none\"> for new features or improvements to existing ones.</span><span data-ccp-props=\"{}\"> </span></p>\n<p><span data-contrast=\"none\">You can </span><a href=\"https://visualstudio.microsoft.com/vs/preview/\"><span data-contrast=\"none\">download the preview</span></a><span data-contrast=\"none\"> from our website or update it from within the IDE. Please note that you should not use this preview in production environments, and some extensions or workloads may not be compatible with it.</span><span data-ccp-props=\"{}\"> </span></p>\n<p><span data-contrast=\"none\">Thank you for using Visual Studio and </span><b><span data-contrast=\"none\">happy coding</span></b><span data-contrast=\"none\">!</span><span data-ccp-props=\"{}\"> </span></p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/first-preview-of-visual-studio-2022-v17-13/\">First preview of Visual Studio 2022 v17.13  </a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "We’re excited to announce the availability of Visual Studio 2022 v17.13 Preview 1 – the first preview of our next update to Visual Studio. This update focuses on providing fantastic developer experiences across the board, with a focus on stability & security, and AI & productivity. Download the preview and see the full list of enhancements in the release notes.  \n\nQuality & security \nEnsuring the highest standards of quality and security is paramount. Visual Studio 2022 v17.13 incorporates robust quality and security enhancements designed to provide a seamless and secure development environment. With improved diagnostics and debugging tools, developers can now identify and resolve issues more efficiently, leading to more reliable and stable applications. Furthermore, enhanced security features offer protection against potential threats, safeguarding your code and data. These improvements not only streamline your workflow but also bolster your confidence in delivering high-quality, secure software solutions. \nAI & productivity \nVisual Studio 2022 v17.13 integrates advanced AI to boost developer productivity by automating routine tasks, offering intelligent code suggestions, and enhancing coding efficiency. With AI-assisted code completion, refactoring tools, and personalized insights, developers can write cleaner, more efficient code and focus on complex, creative aspects of their projects, ultimately accelerating development cycles. This new release also brings general productivity improvements across the IDE, making it a robust tool for developers at every level. \n \nDownload Visual Studio Preview\nWe hope you enjoy this preview of Visual Studio, and we look forward to hearing what you think. You can share feedback with us via Developer Community, by reporting issues via report a problem and share your suggestions for new features or improvements to existing ones. \nYou can download the preview from our website or update it from within the IDE. Please note that you should not use this preview in production environments, and some extensions or workloads may not be compatible with it. \nThank you for using Visual Studio and happy coding! \nThe post First preview of Visual Studio 2022 v17.13   appeared first on Visual Studio Blog."
  },
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251184",
    "raw": "<p>We are thrilled to announce the General Availability (GA) of Visual Studio 2022 version 17.12. This update focuses on providing fantastic developer experiences for working with <strong>.NET 9</strong> projects and new <strong>AI productivity features</strong>, along with continuous improvements for all developers.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251289\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/10/word-image-251184-1.png\" alt=\"Abstract Visual Studio image\" width=\"1200\" height=\"498\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/10/word-image-251184-1.png 1200w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/10/word-image-251184-1-300x125.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/10/word-image-251184-1-1024x425.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/10/word-image-251184-1-768x319.png 768w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<p>Thanks to your continuous feature requests, we&#8217;ve incorporated many of them in this release. There&#8217;s something new for every developer. We have added several new tools and enhancements that simplify your workflow and improve productivity. Whether you&#8217;re looking for advanced debugging capabilities, more efficient code management, or enhanced security features, this update has it all.</p>\n<p><a href=\"https://visualstudio.microsoft.com/downloads/\"><strong><div class=\"d-flex justify-content-left\"><a class=\"cta_button_link btn-primary mb-24\" href=\"https://visualstudio.microsoft.com/downloads/\" target=\"_blank\">Download Visual Studio 2022 v17.12</a></div></strong></a></p>\n<p>For detailed information on each new feature, check out the <a href=\"https://learn.microsoft.com/visualstudio/releases/2022/release-notes\">release notes</a>. If you&#8217;re pressed for time, here are the key highlights.</p>\n<h2><strong>Productivity</strong></h2>\n<ul>\n<li><strong>Copy from the Error List</strong>: Copying an error from the Error List now copies just the description instead of the entire row to the clipboard.</li>\n<li><strong>Go to line anywhere in Code Search</strong>: In Code Search, you can now navigate to a specific line in the current document or other specified document.</li>\n<li><strong>Dock the Code Search window</strong>: You can now freely position the Code Search window with capabilities like docking and auto-hiding.</li>\n<li><strong>Customize collapsed text indicator</strong>: Set custom colors for the collapsed text indicator in the Visual Studio editor.</li>\n<li><strong>Refresh your Find results</strong>: You can now refresh the results to a previous Find to get up-to-date search matches.</li>\n<li><strong>More space for horizontal scrollbar</strong>: You can now control the visibility of the file level indicators in CodeLens.</li>\n<li><strong>Non-blocking Code Cleanup on save</strong>: When Code Cleanup is run on Save, it now operates in a non-blocking manner, for a smoother coding experience.</li>\n</ul>\n<h2><strong>GitHub Copilot</strong></h2>\n<ul>\n<li><strong>AI smart variable inspection</strong>: Optimize your debugging workflow with Integrated AI variable inspection.</li>\n<li><strong>AI-powered IEnumerable visualizer</strong>: AI-powered LINQ Editable Expressions in the IEnumerable visualizer.</li>\n<li><strong>Fix code with GitHub Copilot</strong>: GitHub Copilot assists you in resolving code issues.</li>\n<li><strong>Better AI completions for C#</strong>: GitHub Copilot brings in additional context from relevant source files to improve completions for C#.</li>\n<li><strong>Debug tests with GitHub Copilot</strong>: Get help with debugging failed tests by using Debug Tests with GitHub Copilot.</li>\n</ul>\n<h2><strong>Debugging &amp; diagnostics</strong></h2>\n<ul>\n<li><strong>Shows method return values when debugging</strong>: The debugger now displays inline return values for enhanced debugging efficiency.</li>\n<li><strong>Export breakpoint groups with ease</strong>: Effortless import and export of breakpoint groups.</li>\n<li><strong>Blazor WebAssembly debugging</strong>: An improved debugging experience for Blazor WebAssembly apps targeting .NET 9 or later.</li>\n<li><strong>Meter Histogram in Profiler Counter Tool</strong>: Enhanced performance insights using Meter Histogram in Profiler Counter Tool.</li>\n<li><strong>Analyze memory use over time</strong>: Select and compare multiple memory snapshots using the Diagnostics Tool window.</li>\n</ul>\n<h2><strong>Git tooling</strong></h2>\n<ul>\n<li><strong>Manage file renaming with Git</strong>: Get peace of mind when renaming files with a new notification.</li>\n<li><strong>Pull requests using drafts and templates</strong>: Create pull request drafts and start your descriptions with templates in Visual Studio.</li>\n<li><strong>Create internal GitHub repos</strong>: Visual Studio now supports creating internal repos and includes guidance for each type of repository to give you more confidence when starting a new project.</li>\n<li><strong>Copy Git link</strong>: You can get a GitHub or Azure DevOps link to a specific line of code to make it easy to share with your colleagues.</li>\n<li><strong>Customize your AI Git commit message</strong>: You can add additional instructions to the prompt for generating your Git commit message with GitHub Copilot.</li>\n<li><strong>Multi-repo for GitHub and Azure DevOps</strong>: You can now create pull requests and link work items in multi-repo scenarios.</li>\n</ul>\n<h2><strong>IDE</strong></h2>\n<ul>\n<li><strong>Preserve font across theme changes</strong>: Changing themes will now remember your font and font size preferences.</li>\n<li><strong>Multi-Project Launch Configuration</strong>: Streamline debugging by setting up and saving launch profiles for specific projects within multi-project solutions. Share configurations effortlessly with your team.</li>\n<li><strong>Copy files between instances</strong>: You can now copy files and folders from Solution Explorer in one instance of Visual Studio to another.</li>\n<li><strong>Multiple GitHub accounts</strong>: You can now add multiple GitHub accounts and set an active account to drive GitHub features like GitHub Copilot and Version Control.</li>\n<li><strong>Certificate Revocation Checks</strong>: Visual Studio now alerts you if it detects digital certificate problems during network calls.</li>\n<li><strong>MotW security warnings</strong>: Mark of the web (MotW) security warnings are now integrated into the overall trust functionality.</li>\n<li><strong>Teams Toolkit new AI templates</strong>: The Teams Toolkit onboards new AI Teams app templates.</li>\n</ul>\n<h2><strong>Cloud</strong></h2>\n<ul>\n<li><strong>Azure App Service publish security updates</strong>: Publishing to Azure App Service securely using integrated security updates.</li>\n<li><strong>Azure WebJobs Linux support</strong>: Publishing to Azure WebJobs on Linux is now supported by right-click publish in Visual Studio.</li>\n<li><strong>Azure Functions Flex Consumption</strong>: Publish to Azure Flex Consumption hosting plan, currently in Preview.</li>\n<li><strong>Connected Services security update</strong>: Making your apps and development experienced more secure.</li>\n</ul>\n<h2><strong>Desktop</strong></h2>\n<ul>\n<li><strong>Enhanced WinUI components search</strong>: Enhance WinUI project setup with improved Visual Studio Installer search, simplifying component location for developers.</li>\n</ul>\n<h2><strong>Web</strong></h2>\n<ul>\n<li><strong>Request variables in HTTP files</strong>: HTTP files now support request variables. That is where you can send a request and then use data from the response, or request, in future requests.</li>\n<li><strong>HTTP files shared environment</strong>: In HTTP environment files we have added support to share variables across environments.</li>\n<li><strong>Vitest support in JavaScript and TypeScript</strong>: When using JavaScript and TypeScript projects you can now author test cases with Vitest.</li>\n<li><strong>Inlay Hints support for more languages</strong>: Inlay Hint support has been added to JavaScript, TypeScript, Python and Razor as well as a setting to control its behavior.</li>\n</ul>\n<h2><strong>Data</strong></h2>\n<ul>\n<li><strong>SDK-style SQL projects in SSDT</strong>: You can now use the SDK-style project file format in your SQL Server Data Tools projects.</li>\n</ul>\n<h2><strong>.NET</strong></h2>\n<ul>\n<li><strong>Achieve more with .NET 9</strong>: .NET 9 elevates cloud-native and intelligent app development, focusing on productivity enhancements, streamlined deployments, and accelerated AI integration.</li>\n<li><strong>NuGet audits transitive packages</strong>: NuGet is changing default audit settings to include transitive packages.</li>\n</ul>\n<h2><strong>C++</strong></h2>\n<ul>\n<li><strong>Set C++ Command Line Arguments</strong>: A new way to set your command line arguments right from the toolbar.</li>\n<li><strong>Build Insights view explanations</strong>: Learn how to use each tab of Build Insights via a newly added link to documentation.</li>\n<li><strong>Build Insights path adjustments</strong>: Get a clearer view of your file in Build Insights, see full path on hover.</li>\n<li><strong>Open Folder for Unreal Engine uproject</strong>: A new way of opening your uproject.</li>\n<li><strong>Change signature improved</strong>: You can now effectively change signatures with our improved feature for C++.</li>\n</ul>\n<h2>SHARE YOUR FEEDBACK AND STAY CONNECTED</h2>\n<p>As you use Visual Studio, let us know what you love, what you like, and where you’d like us to improve. You can share feedback with us via <a href=\"https://developercommunity.visualstudio.com/home\">Developer Community</a>: report any bugs or issues via <a href=\"https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio\">report a problem</a> and <a href=\"https://developercommunity.visualstudio.com/report?space=8&amp;entry=suggestion\">share your suggestions</a> for new features or improvements to existing ones.</p>\n<p>Stay connected with the Visual Studio team by following us on <a href=\"https://www.youtube.com/@visualstudio\">YouTube</a>, <a href=\"https://twitter.com/VisualStudio\">Twitter</a>, <a href=\"https://www.linkedin.com/showcase/microsoft-visual-studio/\">LinkedIn</a>, <a href=\"https://www.twitch.tv/visualstudio\">Twitch</a> and on <a href=\"https://learn.microsoft.com/en-us/visualstudio/?view=vs-2022\">Microsoft Learn</a>.</p>\n<p>As always, we appreciate the time you’ve spent reporting issues and hope you continue to give us feedback on how we’re doing and what we can improve.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/visual-studio-2022-v17-12-with-dotnet-9/\">Visual Studio 2022 v17.12 with .NET 9</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "We are thrilled to announce the General Availability (GA) of Visual Studio 2022 version 17.12. This update focuses on providing fantastic developer experiences for working with .NET 9 projects and new AI productivity features, along with continuous improvements for all developers.\n\nThanks to your continuous feature requests, we’ve incorporated many of them in this release. There’s something new for every developer. We have added several new tools and enhancements that simplify your workflow and improve productivity. Whether you’re looking for advanced debugging capabilities, more efficient code management, or enhanced security features, this update has it all.\nDownload Visual Studio 2022 v17.12\nFor detailed information on each new feature, check out the release notes. If you’re pressed for time, here are the key highlights.\nProductivity\n\nCopy from the Error List: Copying an error from the Error List now copies just the description instead of the entire row to the clipboard.\nGo to line anywhere in Code Search: In Code Search, you can now navigate to a specific line in the current document or other specified document.\nDock the Code Search window: You can now freely position the Code Search window with capabilities like docking and auto-hiding.\nCustomize collapsed text indicator: Set custom colors for the collapsed text indicator in the Visual Studio editor.\nRefresh your Find results: You can now refresh the results to a previous Find to get up-to-date search matches.\nMore space for horizontal scrollbar: You can now control the visibility of the file level indicators in CodeLens.\nNon-blocking Code Cleanup on save: When Code Cleanup is run on Save, it now operates in a non-blocking manner, for a smoother coding experience.\n\nGitHub Copilot\n\nAI smart variable inspection: Optimize your debugging workflow with Integrated AI variable inspection.\nAI-powered IEnumerable visualizer: AI-powered LINQ Editable Expressions in the IEnumerable visualizer.\nFix code with GitHub Copilot: GitHub Copilot assists you in resolving code issues.\nBetter AI completions for C#: GitHub Copilot brings in additional context from relevant source files to improve completions for C#.\nDebug tests with GitHub Copilot: Get help with debugging failed tests by using Debug Tests with GitHub Copilot.\n\nDebugging & diagnostics\n\nShows method return values when debugging: The debugger now displays inline return values for enhanced debugging efficiency.\nExport breakpoint groups with ease: Effortless import and export of breakpoint groups.\nBlazor WebAssembly debugging: An improved debugging experience for Blazor WebAssembly apps targeting .NET 9 or later.\nMeter Histogram in Profiler Counter Tool: Enhanced performance insights using Meter Histogram in Profiler Counter Tool.\nAnalyze memory use over time: Select and compare multiple memory snapshots using the Diagnostics Tool window.\n\nGit tooling\n\nManage file renaming with Git: Get peace of mind when renaming files with a new notification.\nPull requests using drafts and templates: Create pull request drafts and start your descriptions with templates in Visual Studio.\nCreate internal GitHub repos: Visual Studio now supports creating internal repos and includes guidance for each type of repository to give you more confidence when starting a new project.\nCopy Git link: You can get a GitHub or Azure DevOps link to a specific line of code to make it easy to share with your colleagues.\nCustomize your AI Git commit message: You can add additional instructions to the prompt for generating your Git commit message with GitHub Copilot.\nMulti-repo for GitHub and Azure DevOps: You can now create pull requests and link work items in multi-repo scenarios.\n\nIDE\n\nPreserve font across theme changes: Changing themes will now remember your font and font size preferences.\nMulti-Project Launch Configuration: Streamline debugging by setting up and saving launch profiles for specific projects within multi-project solutions. Share configurations effortlessly with your team.\nCopy files between instances: You can now copy files and folders from Solution Explorer in one instance of Visual Studio to another.\nMultiple GitHub accounts: You can now add multiple GitHub accounts and set an active account to drive GitHub features like GitHub Copilot and Version Control.\nCertificate Revocation Checks: Visual Studio now alerts you if it detects digital certificate problems during network calls.\nMotW security warnings: Mark of the web (MotW) security warnings are now integrated into the overall trust functionality.\nTeams Toolkit new AI templates: The Teams Toolkit onboards new AI Teams app templates.\n\nCloud\n\nAzure App Service publish security updates: Publishing to Azure App Service securely using integrated security updates.\nAzure WebJobs Linux support: Publishing to Azure WebJobs on Linux is now supported by right-click publish in Visual Studio.\nAzure Functions Flex Consumption: Publish to Azure Flex Consumption hosting plan, currently in Preview.\nConnected Services security update: Making your apps and development experienced more secure.\n\nDesktop\n\nEnhanced WinUI components search: Enhance WinUI project setup with improved Visual Studio Installer search, simplifying component location for developers.\n\nWeb\n\nRequest variables in HTTP files: HTTP files now support request variables. That is where you can send a request and then use data from the response, or request, in future requests.\nHTTP files shared environment: In HTTP environment files we have added support to share variables across environments.\nVitest support in JavaScript and TypeScript: When using JavaScript and TypeScript projects you can now author test cases with Vitest.\nInlay Hints support for more languages: Inlay Hint support has been added to JavaScript, TypeScript, Python and Razor as well as a setting to control its behavior.\n\nData\n\nSDK-style SQL projects in SSDT: You can now use the SDK-style project file format in your SQL Server Data Tools projects.\n\n.NET\n\nAchieve more with .NET 9: .NET 9 elevates cloud-native and intelligent app development, focusing on productivity enhancements, streamlined deployments, and accelerated AI integration.\nNuGet audits transitive packages: NuGet is changing default audit settings to include transitive packages.\n\nC++\n\nSet C++ Command Line Arguments: A new way to set your command line arguments right from the toolbar.\nBuild Insights view explanations: Learn how to use each tab of Build Insights via a newly added link to documentation.\nBuild Insights path adjustments: Get a clearer view of your file in Build Insights, see full path on hover.\nOpen Folder for Unreal Engine uproject: A new way of opening your uproject.\nChange signature improved: You can now effectively change signatures with our improved feature for C++.\n\nSHARE YOUR FEEDBACK AND STAY CONNECTED\nAs you use Visual Studio, let us know what you love, what you like, and where you’d like us to improve. You can share feedback with us via Developer Community: report any bugs or issues via report a problem and share your suggestions for new features or improvements to existing ones.\nStay connected with the Visual Studio team by following us on YouTube, Twitter, LinkedIn, Twitch and on Microsoft Learn.\nAs always, we appreciate the time you’ve spent reporting issues and hope you continue to give us feedback on how we’re doing and what we can improve.\nThe post Visual Studio 2022 v17.12 with .NET 9 appeared first on Visual Studio Blog."
  },
  {
    "itemId": "https://devblogs.microsoft.com/visualstudio/?p=251281",
    "raw": "<p>We&#8217;re excited to announce a significant enhancement to GitHub Copilot that elevates your C# coding experience. Introducing the new update: GitHub Copilot code completions now provide more accurate and relevant autocomplete suggestions by incorporating additional C# context.</p>\n<p>Previously, GitHub Copilot generated suggestions based on the content of your currently active file and any other open files in your editor. While this approach was helpful, we have discovered that including more relevant context can greatly improve the quality of these suggestions.</p>\n<p>With this latest update, GitHub Copilot now automatically considers semantically relevant files for additional context, even if these files are not open in your editor. This enhancement helps reduce hallucinations and ensures that you receive more pertinent and precise code completions.</p>\n<p><strong>Before</strong>: Semantically relevant files are not considered as context for GitHub Copilot Completions</p>\n<figure style=\"text-align: center;\"><iframe title=\"YouTube video player\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/without-related-files.mp4\"><span data-mce-type=\"bookmark\" style=\"display: inline-block; width: 0px; overflow: hidden; line-height: 0;\" class=\"mce_SELRES_start\">﻿</span><em>without-related-files.mp4&#8243; width=&#8221;560&#8243; height=&#8221;315&#8243; allowfullscreen=&#8221;allowfullscreen&#8221;&gt;<span data-mce-type=\"bookmark\" style=\"display: inline-block; width: 0px; overflow: hidden; line-height: 0;\" class=\"mce_SELRES_start\">﻿</span></em></iframe></figure>\n<p><strong>After</strong>: Semantically relevant files are considered as context for GitHub Copilot Completions</p>\n<figure style=\"text-align: center;\"><iframe title=\"YouTube video player\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/with-related-files.mp4\"><span data-mce-type=\"bookmark\" style=\"display: inline-block; width: 0px; overflow: hidden; line-height: 0;\" class=\"mce_SELRES_start\">﻿</span><span data-mce-type=\"bookmark\" style=\"display: inline-block; width: 0px; overflow: hidden; line-height: 0;\" class=\"mce_SELRES_start\">﻿</span><em>without-related-files.mp4&#8243; width=&#8221;560&#8243; height=&#8221;315&#8243; allowfullscreen=&#8221;allowfullscreen&#8221;&gt;<span data-mce-type=\"bookmark\" style=\"display: inline-block; width: 0px; overflow: hidden; line-height: 0;\" class=\"mce_SELRES_start\">﻿</span></em></iframe></figure>\n<p>To dive deeper into how this new feature works and how it can improve your coding productivity, check out our detailed blog post <a href=\"https://devblogs.microsoft.com/dotnet/improving-github-copilot-completions-in-visual-studio-for-csharp-developers/\">Improving GitHub Copilot Completions in Visual Studio for C# Developers</a> on the .NET blog.</p>\n<p>Stay tuned for more updates and thank you for being a part of our developer community.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/better-github-copilot-completions-for-c/\">Better GitHub Copilot Completions for C#</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
    "sanitized": "We’re excited to announce a significant enhancement to GitHub Copilot that elevates your C# coding experience. Introducing the new update: GitHub Copilot code completions now provide more accurate and relevant autocomplete suggestions by incorporating additional C# context.\nPreviously, GitHub Copilot generated suggestions based on the content of your currently active file and any other open files in your editor. While this approach was helpful, we have discovered that including more relevant context can greatly improve the quality of these suggestions.\nWith this latest update, GitHub Copilot now automatically considers semantically relevant files for additional context, even if these files are not open in your editor. This enhancement helps reduce hallucinations and ensures that you receive more pertinent and precise code completions.\nBefore: Semantically relevant files are not considered as context for GitHub Copilot Completions\n﻿without-related-files.mp4″ width=”560″ height=”315″ allowfullscreen=”allowfullscreen”>﻿\nAfter: Semantically relevant files are considered as context for GitHub Copilot Completions\n﻿﻿without-related-files.mp4″ width=”560″ height=”315″ allowfullscreen=”allowfullscreen”>﻿\nTo dive deeper into how this new feature works and how it can improve your coding productivity, check out our detailed blog post Improving GitHub Copilot Completions in Visual Studio for C# Developers on the .NET blog.\nStay tuned for more updates and thank you for being a part of our developer community.\nThe post Better GitHub Copilot Completions for C# appeared first on Visual Studio Blog."
  }
]
