<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Visual Studio Blog</title>
	<atom:link href="https://devblogs.microsoft.com/visualstudio/feed/" rel="self" type="application/rss+xml" />
	<link>https://devblogs.microsoft.com/visualstudio/</link>
	<description>The official source of product insight from the Visual Studio Engineering Team</description>
	<lastBuildDate>Thu, 12 Dec 2024 15:05:11 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	

<image>
	<url>https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2018/10/Microsoft-Favicon.png</url>
	<title>Visual Studio Blog</title>
	<link>https://devblogs.microsoft.com/visualstudio/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Boost your Git confidence with the new file rename notification</title>
		<link>https://devblogs.microsoft.com/visualstudio/boost-your-git-confidence-with-the-new-file-rename-notification/</link>
		
		<dc:creator><![CDATA[Jessie Houghton]]></dc:creator>
		<pubDate>Thu, 12 Dec 2024 15:05:11 +0000</pubDate>
				<category><![CDATA[Git]]></category>
		<category><![CDATA[Reliability]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[GitHub]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251755</guid>

					<description><![CDATA[<p>Have you ever renamed a file in Solution Explorer and wondered if Git is tracking your changes correctly? You&#8217;re not alone. Many developers have found this process confusing and worry whether their changes are being properly staged in Git. But worry no more &#8211; there&#8217;s a solution! When you rename files in Solution Explorer, Visual [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/boost-your-git-confidence-with-the-new-file-rename-notification/">Boost your Git confidence with the new file rename notification</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Have you ever renamed a file in Solution Explorer and wondered if Git is tracking your changes correctly? You&#8217;re not alone. Many developers have found this process confusing and worry whether their changes are being properly staged in Git. But worry no more &#8211; there&#8217;s a solution!</p>
<p><img fetchpriority="high" decoding="async" class="alignnone wp-image-251756" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251755-1.png" alt="Messaging showing that files have been renamed and that Git is picking up on these chnages" width="900" height="505" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251755-1.png 900w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251755-1-300x168.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251755-1-768x431.png 768w" sizes="(max-width: 900px) 100vw, 900px" /></p>
<p>When you rename files in Solution Explorer, Visual Studio 2022 will now remind you to stage your changes to see the renamed files in Git. This small but mighty notification ensures that Git is recognizing your file change.</p>
<h2>Why This Matters</h2>
<p>There is often confusion on how Git works when you rename files, especially since there’s a specific <a href="https://git-scm.com/docs/git-mv">git mv</a> command that is used when you want to move or rename a file or directory. But don’t be deceived, Git never stores any information to track renames. Even when you run a git mv operation, it’s just a short cut for doing a git rm, and then git add on the file. That’s because Git only looks at code change additions (git add) and removals (git rm) over time. In some views Git runs rename detection as it’s navigating history and may display a set of an addition and removal as a rename, but under the hood it uses a heuristic based on the similarity of the two files to call it a rename instead – and sometimes it gets it wrong!</p>
<p>This shows up in Visual Studio when you rename a file from Solution Explorer and look at your changed files list. In all cases, it is shown as an addition and a removal. Understandably, this can be disconcerting if you&#8217;re expecting Git to detect and track the rename and fear you might be losing history information. However, since Git is not tracking renames at all, you won’t be at risk! Your file changes are still in the Git history and can be retrieved. To gain some additional piece of mind, once you stage your files, Git runs the rename detection, and you can see how it resolves the addition and removal into a rename under the staged section. That’s where this new notification comes in.</p>
<p>Tip: If you want to ensure that Git can always identify your file renames when navigating history, you can keep your file naming changes in a separate commit to file content changes. That way, there’s a perfect match between the file that Git sees as removed and the one that Git sees as added, so it’ll correctly detect the rename. This isn’t required and can be inconvenient if it doesn’t match up to your flow but can be helpful when looking through your history later.</p>
<h2>User Feedback Driven Updates</h2>
<p>This feature was developed in response to <a href="https://developercommunity.visualstudio.com/t/renaming-a-file-does-not-perform-a-git-rename/942071">feedback from the Developer Community</a>. We listened to your concerns and collaborated with you to create a solution that makes your workflow more efficient and stress-free. Your input is invaluable, and we are committed to continuously improving Visual Studio based on your feedback.</p>
<p>We want to extend our heartfelt thanks to our users. Your continuous feedback helps us make Visual Studio better with each release. Keep sharing your thoughts and experiences with us!</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/boost-your-git-confidence-with-the-new-file-rename-notification/">Boost your Git confidence with the new file rename notification</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Effortless publishing with Azure Functions Flex Consumption</title>
		<link>https://devblogs.microsoft.com/visualstudio/effortless-publishing-with-azure-functions-flex-consumption/</link>
		
		<dc:creator><![CDATA[Brady Gaster]]></dc:creator>
		<pubDate>Wed, 11 Dec 2024 16:51:45 +0000</pubDate>
				<category><![CDATA[Azure]]></category>
		<category><![CDATA[Cloud]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Linux]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251750</guid>

					<description><![CDATA[<p>Struggling with complex deployment processes for your serverless applications? Visual Studio 2022 introduces a seamless solution with the new Azure Functions Flex Consumption hosting plan, now generally available. Imagine a world where deploying your serverless applications to a hosting plan that supports fast scaling and VNet is as simple as a right-click. With the Azure [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/effortless-publishing-with-azure-functions-flex-consumption/">Effortless publishing with Azure Functions Flex Consumption</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Struggling with complex deployment processes for your serverless applications? Visual Studio 2022 introduces a seamless solution with the new Azure Functions Flex Consumption hosting plan, now generally available.</p>
<p><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251750-1-e1733851878995.png"><img decoding="async" class="alignnone wp-image-251751 " src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251750-1-e1733851878995.png" alt="Create new Function App Linux screenshot" width="540" height="418" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251750-1-e1733851878995.png 441w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251750-1-e1733851878995-300x233.png 300w" sizes="(max-width: 540px) 100vw, 540px" /></a></p>
<p>Imagine a world where deploying your serverless applications to a hosting plan that supports fast scaling and VNet is as simple as a right-click. With the Azure Functions Flex Consumption hosting plan, this is now a reality. This feature allows you to right-click publish to Flex directly from Visual Studio 2022, streamlining your workflow and saving valuable time.</p>
<p>One of the standout features of the Flex Consumption plan is its Virtual Network integration at no extra cost. This ensures that your apps can communicate securely with other resources in your Azure infrastructure without incurring additional expenses.</p>
<h1>Fast and predictable scaling</h1>
<p>Flex Consumption offers fast and predictable scaling with instance size choice and per instance concurrency control. This means you can tailor the performance of your applications to meet the specific demands of your users, ensuring a smooth and responsive experience.</p>
<p>Enjoy the benefits of a true serverless environment with scale to zero capabilities. You only pay for instances while they are active, allowing for cost-effective management of your resources. Additionally, the optional Always Ready instances feature mitigates cold starts, providing a more efficient and user-friendly experience.</p>
<h1>Try it out today</h1>
<p>The Azure Functions Flex Consumption hosting plan is currently in Preview. Learn more about this feature in our <a href="https://aka.ms/flexconsumption/publicpreviewannouncement">announcement blog post</a> and <a href="https://aka.ms/flexconsumption">documentation</a>. Try out one of our <a href="https://aka.ms/flexconsumption/samples">samples</a> to see how easy it is to integrate this new functionality into your projects.</p>
<p>Your continuous feedback is invaluable, and it helps us make Visual Studio better with every update. We appreciate your support and look forward to hearing your thoughts on this new feature.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/effortless-publishing-with-azure-functions-flex-consumption/">Effortless publishing with Azure Functions Flex Consumption</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Effortless publishing to Azure WebJobs on Linux</title>
		<link>https://devblogs.microsoft.com/visualstudio/effortless-publishing-to-azure-webjobs-on-linux/</link>
		
		<dc:creator><![CDATA[Brady Gaster]]></dc:creator>
		<pubDate>Tue, 10 Dec 2024 17:24:00 +0000</pubDate>
				<category><![CDATA[Azure]]></category>
		<category><![CDATA[Cloud]]></category>
		<category><![CDATA[Productivity]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Linux]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251739</guid>

					<description><![CDATA[<p>Are you tired of the cumbersome process involved in publishing your .NET console applications to Azure WebJobs on Linux? For developers yearning for a seamless and efficient method to deploy their applications, Visual Studio 2022 introduces a much-anticipated solution. Visual Studio 2022 now supports right-click publishing to Azure WebJobs on Linux, making the deployment process [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/effortless-publishing-to-azure-webjobs-on-linux/">Effortless publishing to Azure WebJobs on Linux</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Are you tired of the cumbersome process involved in publishing your .NET console applications to Azure WebJobs on Linux? For developers yearning for a seamless and efficient method to deploy their applications, Visual Studio 2022 introduces a much-anticipated solution.</p>
<p><img decoding="async" class="alignnone wp-image-251740" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251739-1.png" alt="Publish to specific target Linux" width="804" height="564" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251739-1.png 804w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251739-1-300x210.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251739-1-768x539.png 768w" sizes="(max-width: 804px) 100vw, 804px" /></p>
<p>Visual Studio 2022 now supports right-click publishing to Azure WebJobs on Linux, making the deployment process faster and more intuitive than ever before. This new feature brings much-needed convenience to developers working with <strong>cross-platform .NET 5.0+ Console Apps</strong>, allowing them to effortlessly publish their code with just a few clicks.</p>
<h2>Why This Matters: The Problem at Hand</h2>
<p>Deploying applications to Azure WebJobs on Linux traditionally required several manual steps, often leading to inefficiencies and increased potential for errors. Developers faced a fragmented workflow, which could be time-consuming and prone to mistakes, ultimately impacting project timelines and productivity.</p>
<h2>The Solution: Simplified Publishing Process</h2>
<p>With the right-click publish feature in Visual Studio 2022, the deployment process has been streamlined significantly. Here’s how it benefits you:</p>
<p><strong>Ease of Use</strong>: Simply right-click on your project in Visual Studio and select the option to publish to Azure WebJobs on Linux. The intuitive interface guides you through the process, reducing the complexity and time required for deployment.</p>
<p><strong>Cross-Platform Compatibility</strong>: This feature supports .NET 5.0+ Console Apps, ensuring that your applications are compatible across various platforms, enhancing their versatility and reach.</p>
<p><strong>Enhanced Efficiency</strong>: By minimizing manual steps and automating the deployment process, developers can focus more on writing code and less on deployment logistics, leading to improved productivity and project efficiency.</p>
<h2>Final Thoughts</h2>
<p>We are incredibly excited about this new addition to Visual Studio 2022 and believe it will significantly enhance your development experience. Your continuous feedback is invaluable to us and plays a crucial role in making Visual Studio the best it can be. Thank you for your support, and we look forward to hearing how this feature improves your workflow.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/effortless-publishing-to-azure-webjobs-on-linux/">Effortless publishing to Azure WebJobs on Linux</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Keep working with non-blocking Code Cleanup</title>
		<link>https://devblogs.microsoft.com/visualstudio/keep-working-with-non-blocking-code-cleanup/</link>
		
		<dc:creator><![CDATA[Leah Tran]]></dc:creator>
		<pubDate>Mon, 09 Dec 2024 16:11:34 +0000</pubDate>
				<category><![CDATA[performance]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251728</guid>

					<description><![CDATA[<p>Are you tired of waiting for Code Cleanup to finish every time you save your work? Visual Studio 2022 will no longer lock up and get in the way of your tasks as it’s cleaning up the code under the covers. Every developer knows the importance of maintaining clean code. However, the traditional Code Cleanup [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/keep-working-with-non-blocking-code-cleanup/">Keep working with non-blocking Code Cleanup</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Are you tired of waiting for Code Cleanup to finish every time you save your work? Visual Studio 2022 will no longer lock up and get in the way of your tasks as it’s cleaning up the code under the covers.</p>
<p><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/async-code-cleanup-on-save.gif"><img decoding="async" class="alignnone wp-image-251733" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/async-code-cleanup-on-save.gif" alt="Image async code cleanup on save" width="773" height="515" /></a></p>
<p>Every developer knows the importance of <a id="post-251728-_Int_7kjpjNfF"></a>maintaining clean code. However, the traditional Code Cleanup process in Visual Studio could take a while to run and lock up the entire IDE, which made it inappropriate to run on save for all scenarios. These interruptions could break your flow and slow down your development progress.</p>
<p>Now, when you save your work, Code Cleanup can run seamlessly in the background without interrupting your workflow.</p>
<h1>Background cleanup for uninterrupted coding</h1>
<p>With this enhancement enabled, the cleanup process runs quietly in the background without locking up the IDE. This means no more waiting for the cleanup to be completed before resuming your work, whether that’s opening tools or navigating around to different files in your codebase. Your IDE stays fully responsive, ensuring a smoother and more efficient user experience.</p>
<h1>Automatic cancellation for real-time adjustments</h1>
<p>Need to make a quick edit, but Code Cleanup started up after you saved? When the editor detects typing, the cleanup process stops. Simply save again to restart cleanup on the updated code. This ensures that you can stay in your workflow and make changes to your code without any worries.</p>
<h1>Setting up Code Cleanup on save</h1>
<p>To enable Code Cleanup on save, navigate to <em>Tools &gt; Options &gt; Text Editor &gt; Code Cleanup</em>. Turn on <a id="post-251728-_Int_HxPZIIOJ"></a>the option <em>Run Code Cleanup profile on Save</em> and choose your desired profile.</p>
<p><img decoding="async" width="762" height="467" class="wp-image-251730" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/second-item-in-options-window-shows-checkbox-for-r.png" alt="Second item in Options window shows checkbox for Run Code Cleanup profile on Save" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/second-item-in-options-window-shows-checkbox-for-r.png 762w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/second-item-in-options-window-shows-checkbox-for-r-300x184.png 300w" sizes="(max-width: 762px) 100vw, 762px" /></p>
<h1>Thank you for your feedback</h1>
<p>We continuously strive to enhance your development experience based on your invaluable feedback. These updates to the Code Cleanup feature are a testament to our commitment to making Visual Studio the best it can be. Your insights drive our innovations, and we appreciate your continuous support.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/keep-working-with-non-blocking-code-cleanup/">Keep working with non-blocking Code Cleanup</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Introducing Code Referencing for GitHub Copilot Chat in Visual Studio</title>
		<link>https://devblogs.microsoft.com/visualstudio/introducing-code-referencing-for-github-copilot-chat-in-visual-studio/</link>
		
		<dc:creator><![CDATA[Rhea Patel]]></dc:creator>
		<pubDate>Thu, 05 Dec 2024 16:00:15 +0000</pubDate>
				<category><![CDATA[GitHub Copilot]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251641</guid>

					<description><![CDATA[<p>Are you tired of the uncertainty that comes with using code suggestions from AI tools? We&#8217;ve got exciting news for you! Visual Studio 2022 now includes code referencing in GitHub Copilot, ensuring greater transparency and control for developers. We are thrilled to announce that code referencing is now available in GitHub Copilot Chat within Visual [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/introducing-code-referencing-for-github-copilot-chat-in-visual-studio/">Introducing Code Referencing for GitHub Copilot Chat in Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Are you tired of the uncertainty that comes with using code suggestions from AI tools? We&#8217;ve got exciting news for you! Visual Studio 2022 now includes code referencing in GitHub Copilot, ensuring greater transparency and control for developers.</p>
<p>We are thrilled to announce that <strong>code referencing is now available in GitHub Copilot Chat within Visual Studio</strong>. This new feature introduces a filter that detects when code suggestions match public code on GitHub, providing you with valuable context to make more informed decisions about the code you incorporate into your projects.</p>
<h2>Make Informed Decisions with Code Suggestions</h2>
<p>In the rare instances where GitHub Copilot suggests code that matches public repositories on GitHub, this feature displays a list of those repositories along with their licenses directly in the editor. This transparency empowers you to:</p>
<ul>
<li><strong>Learn from existing implementations</strong>: Gain insights from how others have tackled similar problems.</li>
<li><strong>Consider dependencies</strong>: Decide whether to use an existing library instead of writing new code.</li>
<li><strong>Acknowledge similar work</strong>: Give or receive credit for comparable code within the community.</li>
</ul>
<h2>How It Works</h2>
<p>When GitHub Copilot suggests code that matches public code, it now lets you know of this match. You can view the matching code, its source file, and any associated licensing information directly within Visual Studio. This allows you to make more informed decisions about whether to use the suggested code.</p>
<p>If a match is found, a notification appears in the editor showing:</p>
<ol>
<li><strong>The matching code snippet</strong></li>
<li><strong>Repositories where the code appears</strong></li>
<li><strong>The licenses governing each repository</strong></li>
</ol>
<p>You have the option to block suggestions containing matching code or allow them with full awareness of their context.</p>
<p>In Copilot Chat it will show like this</p>
<p><img decoding="async" class="alignnone wp-image-251642" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-1.png" alt="Highlighting that copilot found similar code in git repos with the option to view" width="376" height="167" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-1.png 376w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-1-300x133.png 300w" sizes="(max-width: 376px) 100vw, 376px" /></p>
<p>Instead of this:</p>
<p><img decoding="async" class="alignnone wp-image-251643" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-2.png" alt="Original error showing that the response matched public code so it was blcoked" width="571" height="265" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-2.png 571w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-2-300x139.png 300w" sizes="(max-width: 571px) 100vw, 571px" /></p>
<h2>Try It Out Today</h2>
<p>We believe this new code referencing feature enhances your development experience by adding an extra layer of transparency and choice. Try it out in Visual Studio 17.12 Preview 3 and above, and let us know your feedback. Your insights help us improve and tailor our tools to better meet your needs.</p>
<h2>Configuration Note</h2>
<p>Please note that this feature may need to be configured by your administrator. To ensure its enabled for you, check your settings:</p>
<ul>
<li><strong>Copilot &#8211; Suggestions matching public code (duplication detection filter): Allowed</strong></li>
</ul>
<p>GitHub Copilot can provide you with details about matching code when you accept such suggestions. <a href="https://docs.github.com/en/copilot">Learn more</a>.</p>
<h3>Enabling or Disabling Suggestions Matching Public Code</h3>
<p><strong>Note:</strong> If you are a member of an organization on GitHub Enterprise Cloud and have been assigned a GitHub Copilot seat through your organization, you may not be able to configure suggestions matching public code in your personal account settings. Your settings will be inherited from your organization or enterprise.</p>
<p>Your personal settings for GitHub Copilot include an option to either allow or block code suggestions that match publicly available code:</p>
<ul>
<li><strong>Block suggestions matching public code</strong>: GitHub Copilot checks code suggestions with their surrounding code against public code on GitHub. If there&#8217;s a match or near match, the suggestion is not shown.</li>
<li><strong>Allow suggestions matching public code</strong>: When Copilot suggests matching code, you can view details of the matches and navigate to the relevant repositories on GitHub.</li>
</ul>
<p><strong>To adjust your settings:</strong></p>
<ol>
<li>In the upper-right corner of any page on GitHub, click your profile photo, then click <strong>Your Copilot</strong>.</li>
<li>Next to <strong>Suggestions matching public code</strong>, use the dropdown menu to select <strong>Allow</strong> or <strong>Block</strong>.</li>
</ol>
<p>For more information, see <a href="https://docs.github.com/en/copilot">Managing Copilot policies as an individual subscriber</a>.</p>
<p>Developers often face the challenge of not knowing the origins of code suggestions offered by AI tools. This can lead to concerns about licensing and the appropriateness of using certain code snippets. With the new code referencing feature in GitHub Copilot, those worries are outdated.</p>
<h2>Fostering knowledge sharing</h2>
<p>By integrating code referencing into GitHub Copilot, we are fostering a culture of knowledge sharing and transparency. This feature not only empowers individual developers but also supports larger teams in navigating the complexities of public code with ease.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/introducing-code-referencing-for-github-copilot-chat-in-visual-studio/">Introducing Code Referencing for GitHub Copilot Chat in Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>How Inline Return Values Simplify Debugging in Visual Studio 2022</title>
		<link>https://devblogs.microsoft.com/visualstudio/how-inline-return-values-simplify-debugging-in-visual-studio-2022/</link>
		
		<dc:creator><![CDATA[Harshada Hole]]></dc:creator>
		<pubDate>Wed, 04 Dec 2024 16:00:35 +0000</pubDate>
				<category><![CDATA[Debug]]></category>
		<category><![CDATA[GitHub Copilot]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Debugging and Diagnostics]]></category>
		<category><![CDATA[Developer Productivity]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251636</guid>

					<description><![CDATA[<p>Have you ever found yourself creating temporary variables just to inspect return values from functions? It’s a small task that can quickly become tedious, breaking your rhythm and cluttering up your code. Visual Studio 2022 introduces a smarter way to handle this with &#8220;Inline Return Values,&#8221; allowing you to stay focused on coding without the [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/how-inline-return-values-simplify-debugging-in-visual-studio-2022/">How Inline Return Values Simplify Debugging in Visual Studio 2022</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Have you ever found yourself creating temporary variables just to inspect return values from functions? It’s a small task that can quickly become tedious, breaking your rhythm and cluttering up your code. Visual Studio 2022 introduces a smarter way to handle this with &#8220;Inline Return Values,&#8221; allowing you to stay focused on coding without the extra steps.</p>
<p><a href="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526.png"><img decoding="async" class="alignnone size-full wp-image-251677" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526.png" alt="Image Screenshot 2024 12 03 130526" width="1110" height="201" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526.png 1110w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526-300x54.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526-1024x185.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526-768x139.png 768w" sizes="(max-width: 1110px) 100vw, 1110px" /></a></p>
<figure style="text-align: center;"></figure>
<p>This new feature allows you to view return values directly in your code, right where you need them. With Copilot integration, you can go a step further by analyzing the return values in real time. It simplifies understanding and verifying your code’s behavior, cutting out unnecessary steps. Whether you&#8217;re working with native or managed code, this feature is designed to enhance your workflow, providing a seamless, intuitive debugging experience tailored to your needs.</p>
<h2>How It Works</h2>
<p>Previously you might have used the return values shown in the Autos / Locals windows. These values would appear after the function has exited and returned to the caller. Inline return values show this information before the function exits and directly in the editor. And with Copilot integration, you can now receive explanations and solutions without ever leaving your code.</p>
<p>When you hit a breakpoint or step through your code, Visual Studio 2022 automatically displays &#8220;the value which will be returned inline, right next to the closing brace of the method. This provides immediate, clear feedback, making it easy to spot issues and verify that your functions are returning the expected results. <img decoding="async" class="alignnone wp-image-251637" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251636-1.gif" alt="Gif showcasing inline return values with copilot" width="2463" height="1538" /></p>
<p>To explore the return values further, simply hover over the inline display and click &#8220;Ask Copilot” icon on the datatip. A new Copilot chat window will open, and the debugger will gather relevant context and pass it to Copilot for analysis. Copilot will not only explain why you’re seeing those values, but also provide insights into potential issues. If necessary, it can even suggest code fixes to ensure the correct return values, streamlining your debugging process.</p>
<p>You will experience similar Copilot-assisted variable analysis capabilities for Locals, Autos, Watch windows, and DataTips as well , learn more here : <a href="https://devblogs.microsoft.com/visualstudio/ai-powered-insights-streamlining-variable-analysis-with-github-copilot-in-visual-studio/">AI-Powered Insights: Streamlining Variable Analysis with GitHub Copilot in Visual Studio &#8211; Visual Studio Blog</a></p>
<h2>Tell us what you think!</h2>
<p>We hope the inline return values feature enhances your debugging experience! As we continue to develop seamless inline data inspection, your feedback is invaluable. Consider completing our <strong><a href="https://www.surveymonkey.com/r/P3WK629">quick survey</a> </strong>to help us improve this feature.</p>
<p>If you have comments or questions about this or any other Visual Studio features, please use the <a href="https://learn.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2022">Report a Problem tool</a>. Stay connected with the Visual Studio team by following us on <a href="https://twitter.com/VS_Debugger">Twitter @VS_Debugger</a>, <a href="https://twitter.com/VisualStudio">Twitter @VisualStudio</a>, <a href="https://www.youtube.com/user/VisualStudio">YouTube</a>, and <a href="https://www.linkedin.com/showcase/microsoft-visual-studio/">LinkedIn.</a></p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/how-inline-return-values-simplify-debugging-in-visual-studio-2022/">How Inline Return Values Simplify Debugging in Visual Studio 2022</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Introducing the Copy Git Permalink Feature in Visual Studio 17.12</title>
		<link>https://devblogs.microsoft.com/visualstudio/introducing-the-copy-git-permalink-feature-in-visual-studio-17-12/</link>
		
		<dc:creator><![CDATA[Jullyana Ramos]]></dc:creator>
		<pubDate>Tue, 03 Dec 2024 14:05:05 +0000</pubDate>
				<category><![CDATA[Git]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251631</guid>

					<description><![CDATA[<p>We are excited to announce the release of the Copy Git Permalink feature in Visual Studio 17.12. This new functionality streamlines the process of sharing code references, enhancing collaboration and ensuring that critical context is preserved. Effortless Code Sharing If you’ve found yourself needing to share code snippets with colleagues, you know the challenges of [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/introducing-the-copy-git-permalink-feature-in-visual-studio-17-12/">Introducing the Copy Git Permalink Feature in Visual Studio 17.12</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>We are excited to announce the release of the Copy Git Permalink feature in Visual Studio 17.12. This new functionality streamlines the process of sharing code references, enhancing collaboration and ensuring that critical context is preserved.</p>
<h1><img decoding="async" class="alignnone wp-image-251632" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-1.png" alt="Git menu showing the Copy GitHub Permalink option" width="900" height="506" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-1.png 900w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-1-300x169.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-1-768x432.png 768w" sizes="(max-width: 900px) 100vw, 900px" /></h1>
<h2>Effortless Code Sharing</h2>
<p>If you’ve found yourself needing to share code snippets with colleagues, you know the challenges of preserving context. With the new Copy Git Permalink feature, you can now generate a permalink directly from Visual Studio to the remote repository. Simply select the desired code, right-click, and choose the “Copy Permalink” option under the Git submenu. Then, your colleague can open the link you shared to get to that line of code on the web, providing them with the surrounding code without disrupting their local environment.</p>
<p>This feature supports both Azure DevOps repositories and GitHub (requires sign-in). If you’d like the ability to extend the support for your own favorite Git hosting provider, please upvote this <a href="https://developercommunity.visualstudio.com/t/VisualStudioExtensibility-Feature-reque/10771452">Visual Studio Extensibility suggestion ticket</a>.</p>
<h2>Best Practices for Accuracy</h2>
<p>To ensure that your permalink reflects the latest code, remember to commit and push your changes before generating the link. Visual Studio will automatically find the most recent commit on the web if your changes haven’t been pushed recently.</p>
<p>To include line and column numbers in your permalink, make sure the text of interest is selected.</p>
<h2>Historical Code Reference</h2>
<p>The Copy Git Permalink option is also available within the embedded commit details view in the Git Repository window. This allows you to reference specific code from previous commits without switching branches.</p>
<p><img decoding="async" class="alignnone wp-image-251633" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2.png" alt="in the Branch explorer showing a real example where you would copy Git Permalink" width="1431" height="1014" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2.png 1431w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2-300x213.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2-1024x726.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2-768x544.png 768w" sizes="(max-width: 1431px) 100vw, 1431px" /></p>
<h2>From Marketplace to Product</h2>
<p>This started as a hackathon project of a Visual Studio engineer, Etienne Baudoux, which turned into <a id="post-251631-_Int_CuH5ntxn"></a>the popular <a href="https://marketplace.visualstudio.com/items?itemName=EtienneBAUDOUX.CopyGitLink2022">Copy Git Link extension</a>. The productivity gains experienced by internal Microsoft adopters and the votes received in a <a href="https://developercommunity.visualstudio.com/t/copy-url-to-azure-devops-repo-file-view-from-visua/975364">related suggestion ticket</a> made it clear that an in-box alternative to this extension would be appreciated.</p>
<h2>Conclusion</h2>
<p>We encourage you to explore the new Copy Git Permalink feature and share your feedback with us. We are committed to enhancing your development experience and look forward to hear your thoughts.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/introducing-the-copy-git-permalink-feature-in-visual-studio-17-12/">Introducing the Copy Git Permalink Feature in Visual Studio 17.12</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>AI-Powered Insights: Streamlining Variable Analysis with GitHub Copilot in Visual Studio</title>
		<link>https://devblogs.microsoft.com/visualstudio/ai-powered-insights-streamlining-variable-analysis-with-github-copilot-in-visual-studio/</link>
		
		<dc:creator><![CDATA[Harshada Hole]]></dc:creator>
		<pubDate>Mon, 02 Dec 2024 14:44:07 +0000</pubDate>
				<category><![CDATA[Debug]]></category>
		<category><![CDATA[GitHub Copilot]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Debugging and Diagnostics]]></category>
		<category><![CDATA[Developer Productivity]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251626</guid>

					<description><![CDATA[<p>Tired of spending countless hours troubleshooting errors and unexpected values in your code? Visual Studio 2022 introduces GitHub Copilot Variable Analysis. This powerful tool makes inspecting and analyzing variables from Locals, Autos, watch windows and DataTips effortless, helping you solve issues faster and cutting down on time and frustration. Enhanced Debugging Experience Debugging can often [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/ai-powered-insights-streamlining-variable-analysis-with-github-copilot-in-visual-studio/">AI-Powered Insights: Streamlining Variable Analysis with GitHub Copilot in Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Tired of spending countless hours troubleshooting errors and unexpected values in your code? <strong>Visual Studio 2022</strong> introduces<strong> GitHub Copilot Variable Analysis</strong>. This powerful tool makes inspecting and analyzing variables from Locals, Autos, watch windows and DataTips effortless, helping you solve issues faster and cutting down on time and frustration.</p>
<h2><strong>Enhanced Debugging Experience</strong></h2>
<p>Debugging can often resemble searching for a needle in a haystack, especially in complex codebases. But <strong>GitHub</strong> <strong>Copilot Variable Analysis</strong> can make the debugging experience much easier and smoother. Simply hover over any variable in the <strong>Locals</strong>, <strong>Autos</strong>, <strong>Watch</strong>, or <strong>DataTips</strong> windows to reveal the Copilot icon. Clicking this icon launches an interactive chat within Visual Studio, delivering detailed, AI-driven insights about the variable&#8217;s values and how they affect your code&#8217;s execution.</p>
<p><img decoding="async" class="alignnone wp-image-251627" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-1.png" alt="in Autos menu, hovering over root2 variable showing ask copilot as an option" width="977" height="321" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-1.png 977w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-1-300x99.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-1-768x252.png 768w" sizes="(max-width: 977px) 100vw, 977px" /></p>
<p><img decoding="async" class="alignnone wp-image-251628" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-2.png" alt="inline, hovering over root2 with ask copilot option" width="963" height="188" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-2.png 963w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-2-300x59.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-2-768x150.png 768w" sizes="(max-width: 963px) 100vw, 963px" /></p>
<p>This feature is also accessible via the right-click context menu for added convenience.</p>
<h2><strong>How It Works</strong></h2>
<p>When you click the Copilot icon next to a variable, GitHub Copilot analyzes its value and delivers comprehensive insights. The debugger supplies necessary references, allowing Copilot to evaluate the code and offer relevant insights for understanding variable behavior or specific values.</p>
<p>When relevant, Copilot also offers code solutions. To incorporate a suggested solution, simply click the preview button in the chat, which will insert the code directly into the editor. If the code aligns with your requirements, you can accept it and continue debugging.</p>
<p><img decoding="async" class="alignnone wp-image-251629" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-3.gif" alt="Gif showing the root2 ask copilot option. Copilot generates an explanation and new code, the author accepts this new code" width="2463" height="1538" /></p>
<h2><strong>The Benefits of Real-Time Analysis</strong></h2>
<p><strong>Variable Analysis</strong> is a standout feature of <strong>GitHub</strong> <strong>Copilot</strong>, enabling real-time evaluation of variables. When unexpected values arise, you can quickly access detailed information, significantly improving your troubleshooting speed. This seamless integration within the IDE reduces the need for internet searches or context switching, allowing you to concentrate on resolving issues.</p>
<p>Furthermore, <strong>GitHub</strong> <strong>Copilot </strong>empowers you to make informed decisions rapidly. Whether addressing errors or understanding variable behavior, you receive instant feedback without disrupting your workflow.</p>
<h2>Thank you for your feedback</h2>
<p>We believe that the continuous feedback from our users is what makes Visual Studio better with every release. We appreciate your input and are committed to incorporating your suggestions to improve your development experience. Thank you for helping us make Visual Studio the best IDE for developers worldwide.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/ai-powered-insights-streamlining-variable-analysis-with-github-copilot-in-visual-studio/">AI-Powered Insights: Streamlining Variable Analysis with GitHub Copilot in Visual Studio</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Transform your debugging experience with GitHub Copilot</title>
		<link>https://devblogs.microsoft.com/visualstudio/transform-your-debugging-experience-with-github-copilot/</link>
		
		<dc:creator><![CDATA[Wendy Breiding (SHE/HER)]]></dc:creator>
		<pubDate>Thu, 28 Nov 2024 13:00:22 +0000</pubDate>
				<category><![CDATA[Debug]]></category>
		<category><![CDATA[GitHub Copilot]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<category><![CDATA[Debugging]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251588</guid>

					<description><![CDATA[<p>Are your unit tests failing, and do you want to debug them more effectively? The latest feature in Visual Studio 2022, powered by GitHub Copilot, has the perfect solution for you. Introducing the Debug with Copilot button in Test Explorer, this feature takes the hassle out of debugging failed tests and gets you closer to [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/transform-your-debugging-experience-with-github-copilot/">Transform your debugging experience with GitHub Copilot</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Are your unit tests failing, and do you want to debug them more effectively? The latest feature in Visual Studio 2022, powered by GitHub Copilot, has the perfect solution for you. Introducing the <strong>Debug with Copilot</strong> button in Test Explorer, this feature takes the hassle out of debugging failed tests and gets you closer to passing tests in no time.</p>
<p><img decoding="async" width="1429" height="910" class="wp-image-251589" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot.png" alt="Screen shot of Visual Studio with the Ask Copilot buttons highlighted on the Test Explorer." srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot.png 1429w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot-300x191.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot-1024x652.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot-768x489.png 768w" sizes="(max-width: 1429px) 100vw, 1429px" /></p>
<p>Debugging failing unit tests can often be a tedious and frustrating process. Developers spend significant time identifying the root cause of the failure and figuring out the steps to resolve it. This time-consuming process can delay development timelines and reduce productivity. But fear not, Visual Studio 2022 with GitHub Copilot has an innovative solution to streamline this process.</p>
<h2>Introducing Debug with Copilot in Test Explorer</h2>
<p>With <strong>Debug with Copilot</strong> in Test Explorer, your debugging experience is about to become more efficient and user-friendly. When you click on this button, GitHub Copilot steps in to assist you with a comprehensive debug plan. This plan includes setting appropriate breakpoints, watching variables, and launching the debug session.</p>
<h2>How it works</h2>
<p>Once you initiate the feature, GitHub Copilot provides a detailed debug plan tailored to your specific test. It sets the necessary breakpoints and watches variables that are crucial for determining the next steps. As the debug session progresses and hits a breakpoint, GitHub Copilot analyzes the values of the watched variables and provides guidance on whether to continue debugging or proceed with fixing the problematic code.</p>
<p><img decoding="async" class="wp-image-251590" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-github-copilot-chat-after-initiatin.png" alt="Screen shot of GitHub Copilot chat after initiating Debug with Copilot from Test Explorer." width="576" height="661" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-github-copilot-chat-after-initiatin.png 840w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-github-copilot-chat-after-initiatin-261x300.png 261w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-github-copilot-chat-after-initiatin-768x881.png 768w" sizes="(max-width: 576px) 100vw, 576px" /></p>
<p>You can engage in a continuous conversation with GitHub Copilot until your test passes, making the entire process more interactive and less time-consuming. This feature not only saves time but also enhances your debugging skills by providing insightful suggestions and guidance.</p>
<p><img decoding="async" class="wp-image-251591" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screenshot-of-github-copilot-chat-after-variables.png" alt="Screenshot of GitHub Copilot chat after variables returned from debug session showing it knows how to fix the failure." width="586" height="514" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screenshot-of-github-copilot-chat-after-variables.png 752w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screenshot-of-github-copilot-chat-after-variables-300x263.png 300w" sizes="(max-width: 586px) 100vw, 586px" /></p>
<h2>Appreciation for our users</h2>
<p>We are immensely grateful for the continuous feedback from our users, which drives us to make Visual Studio better with each update. Your insights and suggestions are invaluable in helping us deliver features that truly make a difference in your development workflow.</p>
<p>Thank you for being a part of this journey with us. We are excited to see how the <strong>Debug with Copilot</strong> feature transforms your debugging experience and contributes to your success.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/transform-your-debugging-experience-with-github-copilot/">Transform your debugging experience with GitHub Copilot</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Updates for C++ developers in Visual Studio 2022 17.12</title>
		<link>https://devblogs.microsoft.com/visualstudio/updates-for-c-developers-in-visual-studio-2022-17-12/</link>
		
		<dc:creator><![CDATA[Sy Brand]]></dc:creator>
		<pubDate>Wed, 27 Nov 2024 13:00:42 +0000</pubDate>
				<category><![CDATA[Gaming]]></category>
		<category><![CDATA[performance]]></category>
		<category><![CDATA[Productivity]]></category>
		<category><![CDATA[Visual Studio]]></category>
		<guid isPermaLink="false">https://devblogs.microsoft.com/visualstudio/?p=251578</guid>

					<description><![CDATA[<p>Visual Studio 17.12 is here and comes with a host of new features for C++ developers. We’ve made improvements across our toolchain, C++ Build Insights, Unreal Engine support, and more. This post gives a quick overview of what’s available; for all the details, see What’s New for C++ Developers in Visual Studio 2022 17.12 on [&#8230;]</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/updates-for-c-developers-in-visual-studio-2022-17-12/">Updates for C++ developers in Visual Studio 2022 17.12</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></description>
										<content:encoded><![CDATA[<p>Visual Studio 17.12 is here and comes with a host of new features for C++ developers. We’ve made improvements across our toolchain, C++ Build Insights, Unreal Engine support, and more. This post gives a quick overview of what’s available; for all the details, see <a href="https://devblogs.microsoft.com/cppblog/whats-new-for-c-developers-in-visual-studio-2022-17-12/">What’s New for C++ Developers in Visual Studio 2022 17.12</a> on the C++ blog.</p>
<h2>Standard Library and MSVC Compiler</h2>
<p>As always, you can find all the details about our STL work in the <a href="https://github.com/microsoft/STL/wiki/Changelog">changelog on GitHub</a>. Thanks to everyone who contributed changes for this release!</p>
<p>On the conformance side, we have finished the implementation of C++23’s <a href="https://wg21.link/P2286R8">P2286R8</a> Formatting Ranges and the multidimensional subscript operator (e.g. my_3d_span[i,j,k]). This release also comes with some new C++26 features:</p>
<ul>
<li><a href="https://wg21.link/P2997R1">P2997R1</a> Removing The Common Reference Requirement From The Indirectly Invocable Concepts</li>
<li><a href="https://wg21.link/P0952R2">P0952R2</a> A New Specification For <code>generate_canonical()</code></li>
<li><a href="https://wg21.link/P2968R2">P2968R2</a> Make <code>std::ignore</code> A First-Class Object</li>
</ul>
<p>You’ll find improvements to several debug visualizers, including those for <code>mutex/recursive_mutex and move_iterator.</code></p>
<p>We added <code>lifetimebound</code> attributes to <code>min</code>, <code>max</code>, <code>clamp</code>, <code>ranges::min</code>, <code>ranges::max</code>, and <code>ranges::clamp</code>, allowing MSVC code analysis and Clang &#8211;<code>Wdangling</code> to detect dangling references in improper usage. See the documentation for <a href="https://learn.microsoft.com/cpp/code-quality/c26815">warnings C26815</a> and <a href="https://learn.microsoft.com/cpp/code-quality/c26816">C26816</a> for more information about lifetimebound annotations.</p>
<p>Finally, we improved the performance of several types and algorithms. The <code>popcount()</code> function now uses a compiler intrinsic on ARM64. We further improved the vectorized implementations of the <code>minmax_element()</code> and <code>minmax()</code> algorithm families, and optimized the <code>search()</code> and <code>find_end()</code> algorithms. We also overhauled the implementations of <code>condition_variable</code> and <code>condition_variable_any</code>, which has knock-on effects on the <code>timed_mutex</code> and <code>recursive_timed_mutex</code> types.</p>
<h2>Set Command Line Arguments for Unreal Engine Projects</h2>
<p>For Unreal Engine projects, you can now set the command line arguments to pass to your application directly from the toolbar. This toolbar component will show up by default if you have the <strong>Game development with C++ workload </strong>installed. If you don’t see it, you can add it by right-clicking on the toolbar and selecting <strong>Set Arguments</strong>.</p>
<p><img decoding="async" class="alignnone wp-image-251579" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/set-command-line-arguments-box.png" alt="Set command line arguments box (-graphicsadapter=0)" width="600" height="171" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/set-command-line-arguments-box.png 600w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/set-command-line-arguments-box-300x86.png 300w" sizes="(max-width: 600px) 100vw, 600px" /></p>
<p>We’ll be adding support for this feature to non-UE projects in the future. See <a href="https://learn.microsoft.com/en-us/visualstudio/debugger/specify-command-line-arguments?view=vs-2022">Pass command-line arguments while debugging</a> on Microsoft Learn for documentation.</p>
<h2>Open Folder for Unreal Engine uproject</h2>
<p>We have added an additional entry point to open your Unreal Engine uproject with Visual Studio’s uproject support. You can now open your uproject directly from the <strong>File</strong> menu by selecting <strong>Open &gt; Folder…</strong>. This will open your Unreal Engine project in Visual Studio.</p>
<p>For more information on how to use this feature, see the <a href="https://learn.microsoft.com/en-us/visualstudio/debugger/specify-command-line-arguments?view=vs-2022">documentation on Microsoft Learn</a> and our <a href="https://aka.ms/DirectUnrealSupport">announcement blog post</a>.</p>
<h2>Change Signature Improvements</h2>
<p>We have updated the <strong>Change Signature</strong> interface, allowing you to add, remove, and rearrange parameters in the parameter configuration section. Additionally, you can change their order by selecting and dragging them to a new position.</p>
<p>The access methods remain the same: press Ctrl+. to trigger the <em>Quick Actions and Refactorings</em> menu and select <strong>Change Signature</strong>. <img decoding="async" class="alignnone wp-image-251580" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2.png" alt="Image showing and updated method signature (bool LayoutHorizontal(const char * label, int numItems, float itemLabelSize, bool showBorders) and parapmeters" width="1680" height="1009" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2.png 1680w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2-300x180.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2-1024x615.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2-768x461.png 768w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2-1536x923.png 1536w" sizes="(max-width: 1680px) 100vw, 1680px" /></p>
<h2>C++ Build Insights</h2>
<p>This release of Visual Studio comes with a bunch of quality-of-life improvements for C++ Build Insights.</p>
<p>You can now select a few files, run Build Insights on them, and see exactly how these files impact build performance: <img decoding="async" width="700" height="393" class="wp-image-251581" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/run-build-insights-on-file-selection-file-selectio.png" alt="Run Build Insights on File Selection File Selection Command in contextual menu of selected files." srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/run-build-insights-on-file-selection-file-selectio.png 700w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/run-build-insights-on-file-selection-file-selectio-300x168.png 300w" sizes="(max-width: 700px) 100vw, 700px" /></p>
<p>You can filter results by project and file path:</p>
<p><img decoding="async" width="447" height="347" class="wp-image-251582" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/file-path-filter.png" alt="File Path Filter" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/file-path-filter.png 447w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/file-path-filter-300x233.png 300w" sizes="(max-width: 447px) 100vw, 447px" /></p>
<p>Note that we now truncate paths to make them easier to read.</p>
<p>You can designate a folder to automatically store the reports so you can easily access them during your investigation.</p>
<p><img decoding="async" width="846" height="570" class="wp-image-251583" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/setting-to-save-traces-in-custom-location.png" alt="Setting to save traces in custom location" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/setting-to-save-traces-in-custom-location.png 846w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/setting-to-save-traces-in-custom-location-300x202.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/setting-to-save-traces-in-custom-location-768x517.png 768w" sizes="(max-width: 846px) 100vw, 846px" /></p>
<p>Finally, you can now see a short description on how each tab of <a href="https://learn.microsoft.com/en-us/cpp/build-insights/?view=msvc-170">Build Insights</a> can be used, along with a link to the documentation for a detailed explanation.</p>
<p><img decoding="async" class="alignnone wp-image-251584" src="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-6.png" alt="Image showing the highlighted ? for Build insights" width="700" height="394" srcset="https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-6.png 700w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-6-300x169.png 300w" sizes="(max-width: 700px) 100vw, 700px" /></p>
<h2>Summary</h2>
<p>We hope this has given you a taste of what’s new. For all the details, see <a href="https://devblogs.microsoft.com/cppblog/whats-new-for-c-developers-in-visual-studio-2022-17-12/">What’s New for C++ Developers in Visual Studio 2022 17.12</a> on the C++ blog.</p>
<p>We are very much interested in your feedback. The comments below are open. Feedback can also be shared through <a href="https://developercommunity.visualstudio.com/cpp">Visual Studio Developer Community</a>. You can also reach us via email at <a href="mailto:visualcpp@microsoft.com">visualcpp@microsoft.com</a>.</p>
<p>The post <a href="https://devblogs.microsoft.com/visualstudio/updates-for-c-developers-in-visual-studio-2022-17-12/">Updates for C++ developers in Visual Studio 2022 17.12</a> appeared first on <a href="https://devblogs.microsoft.com/visualstudio">Visual Studio Blog</a>.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
