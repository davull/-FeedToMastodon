{
  "Id": "https://devblogs.microsoft.com/visualstudio/feed/",
  "Website": "https://devblogs.microsoft.com/visualstudio/",
  "Title": "Visual Studio Blog",
  "LastUpdatedTime": "2024-12-09T19:57:55+00:00",
  "Description": "The official source of product insight from the Visual Studio Engineering Team",
  "Language": "en-US",
  "Items": [
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251728",
      "Title": "Keep working with non-blocking Code Cleanup",
      "PublishDate": "2024-12-09T16:11:34+00:00",
      "Summary": "<p>Are you tired of waiting for Code Cleanup to finish every time you save your work? Visual Studio 2022 will no longer lock up and get in the way of your tasks as it’s cleaning up the code under the covers. Every developer knows the importance of maintaining clean code. However, the traditional Code Cleanup [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/keep-working-with-non-blocking-code-cleanup/\">Keep working with non-blocking Code Cleanup</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p>Are you tired of waiting for Code Cleanup to finish every time you save your work? Visual Studio 2022 will no longer lock up and get in the way of your tasks as it’s cleaning up the code under the covers.</p>\n<p><a href=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/async-code-cleanup-on-save.gif\"><img fetchpriority=\"high\" decoding=\"async\" class=\"alignnone wp-image-251733\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/async-code-cleanup-on-save.gif\" alt=\"Image async code cleanup on save\" width=\"773\" height=\"515\" /></a></p>\n<p>Every developer knows the importance of <a id=\"post-251728-_Int_7kjpjNfF\"></a>maintaining clean code. However, the traditional Code Cleanup process in Visual Studio could take a while to run and lock up the entire IDE, which made it inappropriate to run on save for all scenarios. These interruptions could break your flow and slow down your development progress.</p>\n<p>Now, when you save your work, Code Cleanup can run seamlessly in the background without interrupting your workflow.</p>\n<h1>Background cleanup for uninterrupted coding</h1>\n<p>With this enhancement enabled, the cleanup process runs quietly in the background without locking up the IDE. This means no more waiting for the cleanup to be completed before resuming your work, whether that’s opening tools or navigating around to different files in your codebase. Your IDE stays fully responsive, ensuring a smoother and more efficient user experience.</p>\n<h1>Automatic cancellation for real-time adjustments</h1>\n<p>Need to make a quick edit, but Code Cleanup started up after you saved? When the editor detects typing, the cleanup process stops. Simply save again to restart cleanup on the updated code. This ensures that you can stay in your workflow and make changes to your code without any worries.</p>\n<h1>Setting up Code Cleanup on save</h1>\n<p>To enable Code Cleanup on save, navigate to <em>Tools &gt; Options &gt; Text Editor &gt; Code Cleanup</em>. Turn on <a id=\"post-251728-_Int_HxPZIIOJ\"></a>the option <em>Run Code Cleanup profile on Save</em> and choose your desired profile.</p>\n<p><img decoding=\"async\" width=\"762\" height=\"467\" class=\"wp-image-251730\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/second-item-in-options-window-shows-checkbox-for-r.png\" alt=\"Second item in Options window shows checkbox for Run Code Cleanup profile on Save\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/second-item-in-options-window-shows-checkbox-for-r.png 762w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/second-item-in-options-window-shows-checkbox-for-r-300x184.png 300w\" sizes=\"(max-width: 762px) 100vw, 762px\" /></p>\n<h1>Thank you for your feedback</h1>\n<p>We continuously strive to enhance your development experience based on your invaluable feedback. These updates to the Code Cleanup feature are a testament to our commitment to making Visual Studio the best it can be. Your insights drive our innovations, and we appreciate your continuous support.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/keep-working-with-non-blocking-code-cleanup/\">Keep working with non-blocking Code Cleanup</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/keep-working-with-non-blocking-code-cleanup/"
    },
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251641",
      "Title": "Introducing Code Referencing for GitHub Copilot Chat in Visual Studio",
      "PublishDate": "2024-12-05T16:00:15+00:00",
      "Summary": "<p>Are you tired of the uncertainty that comes with using code suggestions from AI tools? We&#8217;ve got exciting news for you! Visual Studio 2022 now includes code referencing in GitHub Copilot, ensuring greater transparency and control for developers. We are thrilled to announce that code referencing is now available in GitHub Copilot Chat within Visual [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/introducing-code-referencing-for-github-copilot-chat-in-visual-studio/\">Introducing Code Referencing for GitHub Copilot Chat in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p>Are you tired of the uncertainty that comes with using code suggestions from AI tools? We&#8217;ve got exciting news for you! Visual Studio 2022 now includes code referencing in GitHub Copilot, ensuring greater transparency and control for developers.</p>\n<p>We are thrilled to announce that <strong>code referencing is now available in GitHub Copilot Chat within Visual Studio</strong>. This new feature introduces a filter that detects when code suggestions match public code on GitHub, providing you with valuable context to make more informed decisions about the code you incorporate into your projects.</p>\n<h2>Make Informed Decisions with Code Suggestions</h2>\n<p>In the rare instances where GitHub Copilot suggests code that matches public repositories on GitHub, this feature displays a list of those repositories along with their licenses directly in the editor. This transparency empowers you to:</p>\n<ul>\n<li><strong>Learn from existing implementations</strong>: Gain insights from how others have tackled similar problems.</li>\n<li><strong>Consider dependencies</strong>: Decide whether to use an existing library instead of writing new code.</li>\n<li><strong>Acknowledge similar work</strong>: Give or receive credit for comparable code within the community.</li>\n</ul>\n<h2>How It Works</h2>\n<p>When GitHub Copilot suggests code that matches public code, it now lets you know of this match. You can view the matching code, its source file, and any associated licensing information directly within Visual Studio. This allows you to make more informed decisions about whether to use the suggested code.</p>\n<p>If a match is found, a notification appears in the editor showing:</p>\n<ol>\n<li><strong>The matching code snippet</strong></li>\n<li><strong>Repositories where the code appears</strong></li>\n<li><strong>The licenses governing each repository</strong></li>\n</ol>\n<p>You have the option to block suggestions containing matching code or allow them with full awareness of their context.</p>\n<p>In Copilot Chat it will show like this</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251642\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-1.png\" alt=\"Highlighting that copilot found similar code in git repos with the option to view\" width=\"376\" height=\"167\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-1.png 376w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-1-300x133.png 300w\" sizes=\"(max-width: 376px) 100vw, 376px\" /></p>\n<p>Instead of this:</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251643\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-2.png\" alt=\"Original error showing that the response matched public code so it was blcoked\" width=\"571\" height=\"265\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-2.png 571w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251641-2-300x139.png 300w\" sizes=\"(max-width: 571px) 100vw, 571px\" /></p>\n<h2>Try It Out Today</h2>\n<p>We believe this new code referencing feature enhances your development experience by adding an extra layer of transparency and choice. Try it out in Visual Studio 17.12 Preview 3 and above, and let us know your feedback. Your insights help us improve and tailor our tools to better meet your needs.</p>\n<h2>Configuration Note</h2>\n<p>Please note that this feature may need to be configured by your administrator. To ensure its enabled for you, check your settings:</p>\n<ul>\n<li><strong>Copilot &#8211; Suggestions matching public code (duplication detection filter): Allowed</strong></li>\n</ul>\n<p>GitHub Copilot can provide you with details about matching code when you accept such suggestions. <a href=\"https://docs.github.com/en/copilot\">Learn more</a>.</p>\n<h3>Enabling or Disabling Suggestions Matching Public Code</h3>\n<p><strong>Note:</strong> If you are a member of an organization on GitHub Enterprise Cloud and have been assigned a GitHub Copilot seat through your organization, you may not be able to configure suggestions matching public code in your personal account settings. Your settings will be inherited from your organization or enterprise.</p>\n<p>Your personal settings for GitHub Copilot include an option to either allow or block code suggestions that match publicly available code:</p>\n<ul>\n<li><strong>Block suggestions matching public code</strong>: GitHub Copilot checks code suggestions with their surrounding code against public code on GitHub. If there&#8217;s a match or near match, the suggestion is not shown.</li>\n<li><strong>Allow suggestions matching public code</strong>: When Copilot suggests matching code, you can view details of the matches and navigate to the relevant repositories on GitHub.</li>\n</ul>\n<p><strong>To adjust your settings:</strong></p>\n<ol>\n<li>In the upper-right corner of any page on GitHub, click your profile photo, then click <strong>Your Copilot</strong>.</li>\n<li>Next to <strong>Suggestions matching public code</strong>, use the dropdown menu to select <strong>Allow</strong> or <strong>Block</strong>.</li>\n</ol>\n<p>For more information, see <a href=\"https://docs.github.com/en/copilot\">Managing Copilot policies as an individual subscriber</a>.</p>\n<p>Developers often face the challenge of not knowing the origins of code suggestions offered by AI tools. This can lead to concerns about licensing and the appropriateness of using certain code snippets. With the new code referencing feature in GitHub Copilot, those worries are outdated.</p>\n<h2>Fostering knowledge sharing</h2>\n<p>By integrating code referencing into GitHub Copilot, we are fostering a culture of knowledge sharing and transparency. This feature not only empowers individual developers but also supports larger teams in navigating the complexities of public code with ease.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/introducing-code-referencing-for-github-copilot-chat-in-visual-studio/\">Introducing Code Referencing for GitHub Copilot Chat in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/introducing-code-referencing-for-github-copilot-chat-in-visual-studio/"
    },
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251636",
      "Title": "How Inline Return Values Simplify Debugging in Visual Studio 2022",
      "PublishDate": "2024-12-04T16:00:35+00:00",
      "Summary": "<p>Have you ever found yourself creating temporary variables just to inspect return values from functions? It’s a small task that can quickly become tedious, breaking your rhythm and cluttering up your code. Visual Studio 2022 introduces a smarter way to handle this with &#8220;Inline Return Values,&#8221; allowing you to stay focused on coding without the [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/how-inline-return-values-simplify-debugging-in-visual-studio-2022/\">How Inline Return Values Simplify Debugging in Visual Studio 2022</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p>Have you ever found yourself creating temporary variables just to inspect return values from functions? It’s a small task that can quickly become tedious, breaking your rhythm and cluttering up your code. Visual Studio 2022 introduces a smarter way to handle this with &#8220;Inline Return Values,&#8221; allowing you to stay focused on coding without the extra steps.</p>\n<p><a href=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526.png\"><img decoding=\"async\" class=\"alignnone size-full wp-image-251677\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526.png\" alt=\"Image Screenshot 2024 12 03 130526\" width=\"1110\" height=\"201\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526.png 1110w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526-300x54.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526-1024x185.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/Screenshot-2024-12-03-130526-768x139.png 768w\" sizes=\"(max-width: 1110px) 100vw, 1110px\" /></a></p>\n<figure style=\"text-align: center;\"></figure>\n<p>This new feature allows you to view return values directly in your code, right where you need them. With Copilot integration, you can go a step further by analyzing the return values in real time. It simplifies understanding and verifying your code’s behavior, cutting out unnecessary steps. Whether you&#8217;re working with native or managed code, this feature is designed to enhance your workflow, providing a seamless, intuitive debugging experience tailored to your needs.</p>\n<h2>How It Works</h2>\n<p>Previously you might have used the return values shown in the Autos / Locals windows. These values would appear after the function has exited and returned to the caller. Inline return values show this information before the function exits and directly in the editor. And with Copilot integration, you can now receive explanations and solutions without ever leaving your code.</p>\n<p>When you hit a breakpoint or step through your code, Visual Studio 2022 automatically displays &#8220;the value which will be returned inline, right next to the closing brace of the method. This provides immediate, clear feedback, making it easy to spot issues and verify that your functions are returning the expected results. <img decoding=\"async\" class=\"alignnone wp-image-251637\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251636-1.gif\" alt=\"Gif showcasing inline return values with copilot\" width=\"2463\" height=\"1538\" /></p>\n<p>To explore the return values further, simply hover over the inline display and click &#8220;Ask Copilot” icon on the datatip. A new Copilot chat window will open, and the debugger will gather relevant context and pass it to Copilot for analysis. Copilot will not only explain why you’re seeing those values, but also provide insights into potential issues. If necessary, it can even suggest code fixes to ensure the correct return values, streamlining your debugging process.</p>\n<p>You will experience similar Copilot-assisted variable analysis capabilities for Locals, Autos, Watch windows, and DataTips as well , learn more here : <a href=\"https://devblogs.microsoft.com/visualstudio/ai-powered-insights-streamlining-variable-analysis-with-github-copilot-in-visual-studio/\">AI-Powered Insights: Streamlining Variable Analysis with GitHub Copilot in Visual Studio &#8211; Visual Studio Blog</a></p>\n<h2>Tell us what you think!</h2>\n<p>We hope the inline return values feature enhances your debugging experience! As we continue to develop seamless inline data inspection, your feedback is invaluable. Consider completing our <strong><a href=\"https://www.surveymonkey.com/r/P3WK629\">quick survey</a> </strong>to help us improve this feature.</p>\n<p>If you have comments or questions about this or any other Visual Studio features, please use the <a href=\"https://learn.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2022\">Report a Problem tool</a>. Stay connected with the Visual Studio team by following us on <a href=\"https://twitter.com/VS_Debugger\">Twitter @VS_Debugger</a>, <a href=\"https://twitter.com/VisualStudio\">Twitter @VisualStudio</a>, <a href=\"https://www.youtube.com/user/VisualStudio\">YouTube</a>, and <a href=\"https://www.linkedin.com/showcase/microsoft-visual-studio/\">LinkedIn.</a></p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/how-inline-return-values-simplify-debugging-in-visual-studio-2022/\">How Inline Return Values Simplify Debugging in Visual Studio 2022</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/how-inline-return-values-simplify-debugging-in-visual-studio-2022/"
    },
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251631",
      "Title": "Introducing the Copy Git Permalink Feature in Visual Studio 17.12",
      "PublishDate": "2024-12-03T14:05:05+00:00",
      "Summary": "<p>We are excited to announce the release of the Copy Git Permalink feature in Visual Studio 17.12. This new functionality streamlines the process of sharing code references, enhancing collaboration and ensuring that critical context is preserved. Effortless Code Sharing If you’ve found yourself needing to share code snippets with colleagues, you know the challenges of [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/introducing-the-copy-git-permalink-feature-in-visual-studio-17-12/\">Introducing the Copy Git Permalink Feature in Visual Studio 17.12</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p>We are excited to announce the release of the Copy Git Permalink feature in Visual Studio 17.12. This new functionality streamlines the process of sharing code references, enhancing collaboration and ensuring that critical context is preserved.</p>\n<h1><img decoding=\"async\" class=\"alignnone wp-image-251632\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-1.png\" alt=\"Git menu showing the Copy GitHub Permalink option\" width=\"900\" height=\"506\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-1.png 900w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-1-300x169.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-1-768x432.png 768w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></h1>\n<h2>Effortless Code Sharing</h2>\n<p>If you’ve found yourself needing to share code snippets with colleagues, you know the challenges of preserving context. With the new Copy Git Permalink feature, you can now generate a permalink directly from Visual Studio to the remote repository. Simply select the desired code, right-click, and choose the “Copy Permalink” option under the Git submenu. Then, your colleague can open the link you shared to get to that line of code on the web, providing them with the surrounding code without disrupting their local environment.</p>\n<p>This feature supports both Azure DevOps repositories and GitHub (requires sign-in). If you’d like the ability to extend the support for your own favorite Git hosting provider, please upvote this <a href=\"https://developercommunity.visualstudio.com/t/VisualStudioExtensibility-Feature-reque/10771452\">Visual Studio Extensibility suggestion ticket</a>.</p>\n<h2>Best Practices for Accuracy</h2>\n<p>To ensure that your permalink reflects the latest code, remember to commit and push your changes before generating the link. Visual Studio will automatically find the most recent commit on the web if your changes haven’t been pushed recently.</p>\n<p>To include line and column numbers in your permalink, make sure the text of interest is selected.</p>\n<h2>Historical Code Reference</h2>\n<p>The Copy Git Permalink option is also available within the embedded commit details view in the Git Repository window. This allows you to reference specific code from previous commits without switching branches.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251633\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2.png\" alt=\"in the Branch explorer showing a real example where you would copy Git Permalink\" width=\"1431\" height=\"1014\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2.png 1431w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2-300x213.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2-1024x726.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251631-2-768x544.png 768w\" sizes=\"(max-width: 1431px) 100vw, 1431px\" /></p>\n<h2>From Marketplace to Product</h2>\n<p>This started as a hackathon project of a Visual Studio engineer, Etienne Baudoux, which turned into <a id=\"post-251631-_Int_CuH5ntxn\"></a>the popular <a href=\"https://marketplace.visualstudio.com/items?itemName=EtienneBAUDOUX.CopyGitLink2022\">Copy Git Link extension</a>. The productivity gains experienced by internal Microsoft adopters and the votes received in a <a href=\"https://developercommunity.visualstudio.com/t/copy-url-to-azure-devops-repo-file-view-from-visua/975364\">related suggestion ticket</a> made it clear that an in-box alternative to this extension would be appreciated.</p>\n<h2>Conclusion</h2>\n<p>We encourage you to explore the new Copy Git Permalink feature and share your feedback with us. We are committed to enhancing your development experience and look forward to hear your thoughts.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/introducing-the-copy-git-permalink-feature-in-visual-studio-17-12/\">Introducing the Copy Git Permalink Feature in Visual Studio 17.12</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/introducing-the-copy-git-permalink-feature-in-visual-studio-17-12/"
    },
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251626",
      "Title": "AI-Powered Insights: Streamlining Variable Analysis with GitHub Copilot in Visual Studio",
      "PublishDate": "2024-12-02T14:44:07+00:00",
      "Summary": "<p>Tired of spending countless hours troubleshooting errors and unexpected values in your code? Visual Studio 2022 introduces GitHub Copilot Variable Analysis. This powerful tool makes inspecting and analyzing variables from Locals, Autos, watch windows and DataTips effortless, helping you solve issues faster and cutting down on time and frustration. Enhanced Debugging Experience Debugging can often [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/ai-powered-insights-streamlining-variable-analysis-with-github-copilot-in-visual-studio/\">AI-Powered Insights: Streamlining Variable Analysis with GitHub Copilot in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p>Tired of spending countless hours troubleshooting errors and unexpected values in your code? <strong>Visual Studio 2022</strong> introduces<strong> GitHub Copilot Variable Analysis</strong>. This powerful tool makes inspecting and analyzing variables from Locals, Autos, watch windows and DataTips effortless, helping you solve issues faster and cutting down on time and frustration.</p>\n<h2><strong>Enhanced Debugging Experience</strong></h2>\n<p>Debugging can often resemble searching for a needle in a haystack, especially in complex codebases. But <strong>GitHub</strong> <strong>Copilot Variable Analysis</strong> can make the debugging experience much easier and smoother. Simply hover over any variable in the <strong>Locals</strong>, <strong>Autos</strong>, <strong>Watch</strong>, or <strong>DataTips</strong> windows to reveal the Copilot icon. Clicking this icon launches an interactive chat within Visual Studio, delivering detailed, AI-driven insights about the variable&#8217;s values and how they affect your code&#8217;s execution.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251627\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-1.png\" alt=\"in Autos menu, hovering over root2 variable showing ask copilot as an option\" width=\"977\" height=\"321\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-1.png 977w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-1-300x99.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-1-768x252.png 768w\" sizes=\"(max-width: 977px) 100vw, 977px\" /></p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251628\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-2.png\" alt=\"inline, hovering over root2 with ask copilot option\" width=\"963\" height=\"188\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-2.png 963w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-2-300x59.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-2-768x150.png 768w\" sizes=\"(max-width: 963px) 100vw, 963px\" /></p>\n<p>This feature is also accessible via the right-click context menu for added convenience.</p>\n<h2><strong>How It Works</strong></h2>\n<p>When you click the Copilot icon next to a variable, GitHub Copilot analyzes its value and delivers comprehensive insights. The debugger supplies necessary references, allowing Copilot to evaluate the code and offer relevant insights for understanding variable behavior or specific values.</p>\n<p>When relevant, Copilot also offers code solutions. To incorporate a suggested solution, simply click the preview button in the chat, which will insert the code directly into the editor. If the code aligns with your requirements, you can accept it and continue debugging.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251629\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/12/word-image-251626-3.gif\" alt=\"Gif showing the root2 ask copilot option. Copilot generates an explanation and new code, the author accepts this new code\" width=\"2463\" height=\"1538\" /></p>\n<h2><strong>The Benefits of Real-Time Analysis</strong></h2>\n<p><strong>Variable Analysis</strong> is a standout feature of <strong>GitHub</strong> <strong>Copilot</strong>, enabling real-time evaluation of variables. When unexpected values arise, you can quickly access detailed information, significantly improving your troubleshooting speed. This seamless integration within the IDE reduces the need for internet searches or context switching, allowing you to concentrate on resolving issues.</p>\n<p>Furthermore, <strong>GitHub</strong> <strong>Copilot </strong>empowers you to make informed decisions rapidly. Whether addressing errors or understanding variable behavior, you receive instant feedback without disrupting your workflow.</p>\n<h2>Thank you for your feedback</h2>\n<p>We believe that the continuous feedback from our users is what makes Visual Studio better with every release. We appreciate your input and are committed to incorporating your suggestions to improve your development experience. Thank you for helping us make Visual Studio the best IDE for developers worldwide.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/ai-powered-insights-streamlining-variable-analysis-with-github-copilot-in-visual-studio/\">AI-Powered Insights: Streamlining Variable Analysis with GitHub Copilot in Visual Studio</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/ai-powered-insights-streamlining-variable-analysis-with-github-copilot-in-visual-studio/"
    },
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251588",
      "Title": "Transform your debugging experience with GitHub Copilot",
      "PublishDate": "2024-11-28T13:00:22+00:00",
      "Summary": "<p>Are your unit tests failing, and do you want to debug them more effectively? The latest feature in Visual Studio 2022, powered by GitHub Copilot, has the perfect solution for you. Introducing the Debug with Copilot button in Test Explorer, this feature takes the hassle out of debugging failed tests and gets you closer to [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/transform-your-debugging-experience-with-github-copilot/\">Transform your debugging experience with GitHub Copilot</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p>Are your unit tests failing, and do you want to debug them more effectively? The latest feature in Visual Studio 2022, powered by GitHub Copilot, has the perfect solution for you. Introducing the <strong>Debug with Copilot</strong> button in Test Explorer, this feature takes the hassle out of debugging failed tests and gets you closer to passing tests in no time.</p>\n<p><img decoding=\"async\" width=\"1429\" height=\"910\" class=\"wp-image-251589\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot.png\" alt=\"Screen shot of Visual Studio with the Ask Copilot buttons highlighted on the Test Explorer.\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot.png 1429w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot-300x191.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot-1024x652.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-visual-studio-with-the-ask-copilot-768x489.png 768w\" sizes=\"(max-width: 1429px) 100vw, 1429px\" /></p>\n<p>Debugging failing unit tests can often be a tedious and frustrating process. Developers spend significant time identifying the root cause of the failure and figuring out the steps to resolve it. This time-consuming process can delay development timelines and reduce productivity. But fear not, Visual Studio 2022 with GitHub Copilot has an innovative solution to streamline this process.</p>\n<h2>Introducing Debug with Copilot in Test Explorer</h2>\n<p>With <strong>Debug with Copilot</strong> in Test Explorer, your debugging experience is about to become more efficient and user-friendly. When you click on this button, GitHub Copilot steps in to assist you with a comprehensive debug plan. This plan includes setting appropriate breakpoints, watching variables, and launching the debug session.</p>\n<h2>How it works</h2>\n<p>Once you initiate the feature, GitHub Copilot provides a detailed debug plan tailored to your specific test. It sets the necessary breakpoints and watches variables that are crucial for determining the next steps. As the debug session progresses and hits a breakpoint, GitHub Copilot analyzes the values of the watched variables and provides guidance on whether to continue debugging or proceed with fixing the problematic code.</p>\n<p><img decoding=\"async\" class=\"wp-image-251590\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-github-copilot-chat-after-initiatin.png\" alt=\"Screen shot of GitHub Copilot chat after initiating Debug with Copilot from Test Explorer.\" width=\"576\" height=\"661\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-github-copilot-chat-after-initiatin.png 840w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-github-copilot-chat-after-initiatin-261x300.png 261w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screen-shot-of-github-copilot-chat-after-initiatin-768x881.png 768w\" sizes=\"(max-width: 576px) 100vw, 576px\" /></p>\n<p>You can engage in a continuous conversation with GitHub Copilot until your test passes, making the entire process more interactive and less time-consuming. This feature not only saves time but also enhances your debugging skills by providing insightful suggestions and guidance.</p>\n<p><img decoding=\"async\" class=\"wp-image-251591\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screenshot-of-github-copilot-chat-after-variables.png\" alt=\"Screenshot of GitHub Copilot chat after variables returned from debug session showing it knows how to fix the failure.\" width=\"586\" height=\"514\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screenshot-of-github-copilot-chat-after-variables.png 752w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/screenshot-of-github-copilot-chat-after-variables-300x263.png 300w\" sizes=\"(max-width: 586px) 100vw, 586px\" /></p>\n<h2>Appreciation for our users</h2>\n<p>We are immensely grateful for the continuous feedback from our users, which drives us to make Visual Studio better with each update. Your insights and suggestions are invaluable in helping us deliver features that truly make a difference in your development workflow.</p>\n<p>Thank you for being a part of this journey with us. We are excited to see how the <strong>Debug with Copilot</strong> feature transforms your debugging experience and contributes to your success.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/transform-your-debugging-experience-with-github-copilot/\">Transform your debugging experience with GitHub Copilot</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/transform-your-debugging-experience-with-github-copilot/"
    },
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251578",
      "Title": "Updates for C++ developers in Visual Studio 2022 17.12",
      "PublishDate": "2024-11-27T13:00:42+00:00",
      "Summary": "<p>Visual Studio 17.12 is here and comes with a host of new features for C++ developers. We’ve made improvements across our toolchain, C++ Build Insights, Unreal Engine support, and more. This post gives a quick overview of what’s available; for all the details, see What’s New for C++ Developers in Visual Studio 2022 17.12 on [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/updates-for-c-developers-in-visual-studio-2022-17-12/\">Updates for C++ developers in Visual Studio 2022 17.12</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p>Visual Studio 17.12 is here and comes with a host of new features for C++ developers. We’ve made improvements across our toolchain, C++ Build Insights, Unreal Engine support, and more. This post gives a quick overview of what’s available; for all the details, see <a href=\"https://devblogs.microsoft.com/cppblog/whats-new-for-c-developers-in-visual-studio-2022-17-12/\">What’s New for C++ Developers in Visual Studio 2022 17.12</a> on the C++ blog.</p>\n<h2>Standard Library and MSVC Compiler</h2>\n<p>As always, you can find all the details about our STL work in the <a href=\"https://github.com/microsoft/STL/wiki/Changelog\">changelog on GitHub</a>. Thanks to everyone who contributed changes for this release!</p>\n<p>On the conformance side, we have finished the implementation of C++23’s <a href=\"https://wg21.link/P2286R8\">P2286R8</a> Formatting Ranges and the multidimensional subscript operator (e.g. my_3d_span[i,j,k]). This release also comes with some new C++26 features:</p>\n<ul>\n<li><a href=\"https://wg21.link/P2997R1\">P2997R1</a> Removing The Common Reference Requirement From The Indirectly Invocable Concepts</li>\n<li><a href=\"https://wg21.link/P0952R2\">P0952R2</a> A New Specification For <code>generate_canonical()</code></li>\n<li><a href=\"https://wg21.link/P2968R2\">P2968R2</a> Make <code>std::ignore</code> A First-Class Object</li>\n</ul>\n<p>You’ll find improvements to several debug visualizers, including those for <code>mutex/recursive_mutex and move_iterator.</code></p>\n<p>We added <code>lifetimebound</code> attributes to <code>min</code>, <code>max</code>, <code>clamp</code>, <code>ranges::min</code>, <code>ranges::max</code>, and <code>ranges::clamp</code>, allowing MSVC code analysis and Clang &#8211;<code>Wdangling</code> to detect dangling references in improper usage. See the documentation for <a href=\"https://learn.microsoft.com/cpp/code-quality/c26815\">warnings C26815</a> and <a href=\"https://learn.microsoft.com/cpp/code-quality/c26816\">C26816</a> for more information about lifetimebound annotations.</p>\n<p>Finally, we improved the performance of several types and algorithms. The <code>popcount()</code> function now uses a compiler intrinsic on ARM64. We further improved the vectorized implementations of the <code>minmax_element()</code> and <code>minmax()</code> algorithm families, and optimized the <code>search()</code> and <code>find_end()</code> algorithms. We also overhauled the implementations of <code>condition_variable</code> and <code>condition_variable_any</code>, which has knock-on effects on the <code>timed_mutex</code> and <code>recursive_timed_mutex</code> types.</p>\n<h2>Set Command Line Arguments for Unreal Engine Projects</h2>\n<p>For Unreal Engine projects, you can now set the command line arguments to pass to your application directly from the toolbar. This toolbar component will show up by default if you have the <strong>Game development with C++ workload </strong>installed. If you don’t see it, you can add it by right-clicking on the toolbar and selecting <strong>Set Arguments</strong>.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251579\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/set-command-line-arguments-box.png\" alt=\"Set command line arguments box (-graphicsadapter=0)\" width=\"600\" height=\"171\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/set-command-line-arguments-box.png 600w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/set-command-line-arguments-box-300x86.png 300w\" sizes=\"(max-width: 600px) 100vw, 600px\" /></p>\n<p>We’ll be adding support for this feature to non-UE projects in the future. See <a href=\"https://learn.microsoft.com/en-us/visualstudio/debugger/specify-command-line-arguments?view=vs-2022\">Pass command-line arguments while debugging</a> on Microsoft Learn for documentation.</p>\n<h2>Open Folder for Unreal Engine uproject</h2>\n<p>We have added an additional entry point to open your Unreal Engine uproject with Visual Studio’s uproject support. You can now open your uproject directly from the <strong>File</strong> menu by selecting <strong>Open &gt; Folder…</strong>. This will open your Unreal Engine project in Visual Studio.</p>\n<p>For more information on how to use this feature, see the <a href=\"https://learn.microsoft.com/en-us/visualstudio/debugger/specify-command-line-arguments?view=vs-2022\">documentation on Microsoft Learn</a> and our <a href=\"https://aka.ms/DirectUnrealSupport\">announcement blog post</a>.</p>\n<h2>Change Signature Improvements</h2>\n<p>We have updated the <strong>Change Signature</strong> interface, allowing you to add, remove, and rearrange parameters in the parameter configuration section. Additionally, you can change their order by selecting and dragging them to a new position.</p>\n<p>The access methods remain the same: press Ctrl+. to trigger the <em>Quick Actions and Refactorings</em> menu and select <strong>Change Signature</strong>. <img decoding=\"async\" class=\"alignnone wp-image-251580\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2.png\" alt=\"Image showing and updated method signature (bool LayoutHorizontal(const char * label, int numItems, float itemLabelSize, bool showBorders) and parapmeters\" width=\"1680\" height=\"1009\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2.png 1680w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2-300x180.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2-1024x615.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2-768x461.png 768w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-2-1536x923.png 1536w\" sizes=\"(max-width: 1680px) 100vw, 1680px\" /></p>\n<h2>C++ Build Insights</h2>\n<p>This release of Visual Studio comes with a bunch of quality-of-life improvements for C++ Build Insights.</p>\n<p>You can now select a few files, run Build Insights on them, and see exactly how these files impact build performance: <img decoding=\"async\" width=\"700\" height=\"393\" class=\"wp-image-251581\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/run-build-insights-on-file-selection-file-selectio.png\" alt=\"Run Build Insights on File Selection File Selection Command in contextual menu of selected files.\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/run-build-insights-on-file-selection-file-selectio.png 700w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/run-build-insights-on-file-selection-file-selectio-300x168.png 300w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<p>You can filter results by project and file path:</p>\n<p><img decoding=\"async\" width=\"447\" height=\"347\" class=\"wp-image-251582\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/file-path-filter.png\" alt=\"File Path Filter\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/file-path-filter.png 447w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/file-path-filter-300x233.png 300w\" sizes=\"(max-width: 447px) 100vw, 447px\" /></p>\n<p>Note that we now truncate paths to make them easier to read.</p>\n<p>You can designate a folder to automatically store the reports so you can easily access them during your investigation.</p>\n<p><img decoding=\"async\" width=\"846\" height=\"570\" class=\"wp-image-251583\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/setting-to-save-traces-in-custom-location.png\" alt=\"Setting to save traces in custom location\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/setting-to-save-traces-in-custom-location.png 846w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/setting-to-save-traces-in-custom-location-300x202.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/setting-to-save-traces-in-custom-location-768x517.png 768w\" sizes=\"(max-width: 846px) 100vw, 846px\" /></p>\n<p>Finally, you can now see a short description on how each tab of <a href=\"https://learn.microsoft.com/en-us/cpp/build-insights/?view=msvc-170\">Build Insights</a> can be used, along with a link to the documentation for a detailed explanation.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251584\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-6.png\" alt=\"Image showing the highlighted ? for Build insights\" width=\"700\" height=\"394\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-6.png 700w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251578-6-300x169.png 300w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></p>\n<h2>Summary</h2>\n<p>We hope this has given you a taste of what’s new. For all the details, see <a href=\"https://devblogs.microsoft.com/cppblog/whats-new-for-c-developers-in-visual-studio-2022-17-12/\">What’s New for C++ Developers in Visual Studio 2022 17.12</a> on the C++ blog.</p>\n<p>We are very much interested in your feedback. The comments below are open. Feedback can also be shared through <a href=\"https://developercommunity.visualstudio.com/cpp\">Visual Studio Developer Community</a>. You can also reach us via email at <a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/updates-for-c-developers-in-visual-studio-2022-17-12/\">Updates for C++ developers in Visual Studio 2022 17.12</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/updates-for-c-developers-in-visual-studio-2022-17-12/"
    },
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251549",
      "Title": "Debugger and Diagnostics updates in Visual Studio 17.12",
      "PublishDate": "2024-11-26T16:41:34+00:00",
      "Summary": "<p>We are thrilled to announce a host of exciting new features in Visual Studio 17.12, designed to enhance your development experience and boost your productivity. Our team has been working diligently to address some of the most popular requests from our developer community, and we are confident that these updates will significantly improve your workflow. [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/debugger-and-diagnostics-updates-in-visual-studio-17-12/\">Debugger and Diagnostics updates in Visual Studio 17.12</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p>We are thrilled to announce a host of exciting new features in Visual Studio 17.12, designed to enhance your development experience and boost your productivity. Our team has been working diligently to address some of the most popular requests from our developer community, and we are confident that these updates will significantly improve your workflow.</p>\n<p>For a full list of updates, check out the <a href=\"https://learn.microsoft.com/visualstudio/releases/2022/release-notes-preview\">release notes</a>.</p>\n<h2>Display Inline Method Return Values</h2>\n<p>The Visual Studio debugger now displays inline values for return statements, responding to one of the most requested features from the developer community.</p>\n<p>This enhancement allows you to see the exact values being returned by functions directly in the code, eliminating the need for additional code or temporary variables to inspect return values.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251550\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-computer-screen-shot-of-a-program-description-a.gif\" alt=\"Gif showing inline returns connecting with GitHub Copilot chat\" width=\"800\" height=\"468\" /></p>\n<p>With GitHub Copilot, you can take it further by using the <strong>Ask Copilot</strong> option on hover to analyze return values directly in Visual Studio, allowing you to address issues immediately.</p>\n<p>It is supported in both native and managed code.</p>\n<h2>Export breakpoint groups with ease</h2>\n<p>Visual Studio Breakpoint Groups now support import and export functionality, enabling you to easily manage and maintain your breakpoint structures across multiple projects or environments.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251551\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-1.gif\" alt=\"Gif showing exporting breakpoints into file explorer\" width=\"790\" height=\"595\" /></p>\n<p>This new feature allows you to export your breakpoint groups with their configurations and later import them into different solutions, ensuring a consistent debugging setup without the need to manually recreate breakpoints groups again.</p>\n<h2>Inspect variable with Copilot</h2>\n<p>With GitHub Copilot seamlessly integrated into Visual Studio, analyzing values from Locals, Autos, and DataTips becomes a streamlined experience. Similar to method return values, you can instantly access AI-powered insights to identify potential errors, diagnose unexpected outcomes, or uncover anomalies by simply right-clicking on any value.</p>\n<p>This feature keeps the focus on debugging by providing actionable suggestions and detailed context directly within the IDE, eliminating the need to switch tools or disrupt workflow.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251552\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-3.png\" alt=\"Image leveraging GitHub Copilot chat to inspect images\" width=\"1200\" height=\"675\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-3.png 1200w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-3-300x169.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-3-1024x576.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-3-768x432.png 768w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<h2>IntelliSense in the IEnumerable Visualizer</h2>\n<p>The IEnumerable Visualizer has been enhanced with IntelliSense, providing real-time code suggestions and autocompletion, which makes writing LINQ expressions faster and more accurate.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251553\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/a-screenshot-of-a-computer-description-automatica-2.gif\" alt=\"Gif showcasing IntelliSense in the IEnumerable Visualizer\" width=\"724\" height=\"496\" /></p>\n<p>This enhancement streamlines the process of building and editing queries by providing intelligent code recommendations, minimizing errors, and accelerating development. Additional improvements are planned for upcoming releases, including AI assistance for writing LINQ queries.</p>\n<h2>Analyze memory use over time</h2>\n<p>The Diagnostics Tool window now supports comparing memory snapshots, making it easier to analyze changes in memory usage over time. To use this feature, ensure you have at least two memory snapshots captured in the <strong>Memory</strong> tab.</p>\n<p>You can select snapshots for comparison by holding <strong>Ctrl</strong> and clicking on the desired rows or by holding <strong>Shift</strong> and using the <strong>up/down arrow keys</strong> to select two consecutive snapshots. To unselect a snapshot, simply hold <strong>Ctrl</strong> and click on the snapshot you want to deselect. Once two snapshots are selected, click the <strong>View Diff</strong> button located above the snapshot list to view the differences between them.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251554\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-5.png\" alt=\"Image in the Memory Usage tab highlighting the View Diff\" width=\"424\" height=\"179\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-5.png 424w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-5-300x127.png 300w\" sizes=\"(max-width: 424px) 100vw, 424px\" /></p>\n<h2>Meter histogram in the profiler</h2>\n<p>We’ve also introduced the <strong>Meter Histogram</strong> feature in the <strong>Diagnostics Window</strong>, enhancing your ability to analyze and visualize histogram data generated by histogram instruments. This upgrade allows you to capture and explore data distributions in greater detail, presenting the results through clear and intuitive visualizations during profiling sessions. With this feature, identifying patterns, trends, and insights from histogram-based metrics becomes more efficient, providing a seamless and effective way to optimize and debug your applications.</p>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251555\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-6.png\" alt=\"Image highlighting the meter histogram in the profiler\" width=\"1200\" height=\"675\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-6.png 1200w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-6-300x169.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-6-1024x576.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251549-6-768x432.png 768w\" sizes=\"(max-width: 1200px) 100vw, 1200px\" /></p>\n<h2>Thank you!</h2>\n<p>We are dedicated to continuously improving your development experience, and many of these advancements are driven by your invaluable feedback and suggestions. Your input plays a vital role in shaping the future of Visual Studio, and we encourage you to keep sharing your ideas with us.</p>\n<p>Thank you for being an essential part of our developer community and for your ongoing support. Together, we can reach new milestones and make Visual Studio the ultimate development environment.</p>\n<p>Happy coding!</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/debugger-and-diagnostics-updates-in-visual-studio-17-12/\">Debugger and Diagnostics updates in Visual Studio 17.12</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/debugger-and-diagnostics-updates-in-visual-studio-17-12/"
    },
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251533",
      "Title": "Copying error messages just got easier",
      "PublishDate": "2024-11-25T15:19:53+00:00",
      "Summary": "<p>Have you ever been frustrated by the tedious process of copying error descriptions from the Error List? Previously with Visual Studio, copying an error would include all column headers and row values, which isn’t always what you want. If you were planning to search for the error online, it was a hassle to clean up [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/copying-error-messages-just-got-easier/\">Copying error messages just got easier</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p>Have you ever been frustrated by the tedious process of copying error descriptions from the Error List? Previously with Visual Studio, copying an error would include all column headers and row values, which isn’t always what you want. If you were planning to search for the error online, it was a hassle to clean up the text after pasting.</p>\n<p><img decoding=\"async\" width=\"801\" height=\"283\" class=\"wp-image-251534\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/context-menu-highlights-options-copy-copy-row-an.png\" alt=\"Context menu highlights options Copy, Copy Row, and Search the Web for Help\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/context-menu-highlights-options-copy-copy-row-an.png 801w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/context-menu-highlights-options-copy-copy-row-an-300x106.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/context-menu-highlights-options-copy-copy-row-an-768x271.png 768w\" sizes=\"(max-width: 801px) 100vw, 801px\" /></p>\n<p>Now when you `Ctrl+C` on a row in the Error List, only the error description is copied to the clipboard. You can still copy the entire row with `Ctrl+Shift+C` and now even directly search the web for the error. This makes it easy to get the information you need, saving precious time and headaches.</p>\n<h2><a id=\"post-251533-_Int_aUKesQch\"></a>Additional options for copying</h2>\n<p>Visual Studio 2022 now offers multiple copy options in the Error List for quick access to what you need.</p>\n<p>After selecting the relevant error, you can choose the <a id=\"post-251533-_Int_Q65vMMrz\"></a>option in the context menu or use the following keyboard shortcuts.</p>\n<table>\n<tbody>\n<tr>\n<td><strong>Context menu </strong><a id=\"post-251533-_Int_GJuPqXpB\"></a><strong>option</strong></td>\n<td><strong>Keyboard shortcut</strong></td>\n<td><strong>Description</strong></td>\n</tr>\n<tr>\n<td>Copy</td>\n<td>Ctrl+C</td>\n<td>Copy only the description</td>\n</tr>\n<tr>\n<td>Copy Row</td>\n<td>Ctrl+Shift+C</td>\n<td>Copy the entire row, description and all</td>\n</tr>\n<tr>\n<td>Search the Web for Help</td>\n<td>Ctrl+F1</td>\n<td>Search online for the error with Bing</td>\n</tr>\n</tbody>\n</table>\n<p>You can also Copy and Copy Row with multiple errors at a time, so you can get all the information you need at once.</p>\n<h2>Conclusion</h2>\n<p>We are continually improving Visual Studio based on your feedback, striving to make your development experience as smooth and productive as possible. This update to the Error List copying functionality is just one of the many ways we are working to enhance your workflow. Thank you for your continued support and valuable insights.</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/copying-error-messages-just-got-easier/\">Copying error messages just got easier</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/copying-error-messages-just-got-easier/"
    },
    {
      "FeedId": "https://devblogs.microsoft.com/visualstudio/feed/",
      "ItemId": "https://devblogs.microsoft.com/visualstudio/?p=251478",
      "Title": "Top 5 GitHub Copilot Features in Visual Studio from Microsoft Ignite 2024",
      "PublishDate": "2024-11-22T13:00:25+00:00",
      "Summary": "<p>At this year’s Microsoft Ignite, it was truly exciting to see Scott, Dalia, and Jessie demo some of the most innovative features of GitHub Copilot that are transforming the developer experience in Visual Studio. From the breakout session, we highlighted five standout features that are pushing productivity to the next level. Whether you&#8217;re working on [&#8230;]</p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/top-5-github-copilot-features-in-visual-studio-from-microsoft-ignite-2024/\">Top 5 GitHub Copilot Features in Visual Studio from Microsoft Ignite 2024</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Content": "<p><a href=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028.png\"><img decoding=\"async\" class=\"alignnone wp-image-251491 size-full\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028.png\" alt=\"Ignite banner showing session &quot;Discover GitHub Copilot's Untapped Potential in Visual Studio&quot; by Scott, Dalia, Jessie\" width=\"908\" height=\"503\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028.png 908w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028-300x166.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/Screenshot-2024-11-21-170028-768x425.png 768w\" sizes=\"(max-width: 908px) 100vw, 908px\" /></a></p>\n<p>At this year’s Microsoft Ignite, it was truly exciting to see Scott, Dalia, and Jessie demo some of the most innovative features of GitHub Copilot that are transforming the developer experience in Visual Studio. From the breakout session, we highlighted five standout features that are pushing productivity to the next level. Whether you&#8217;re working on complex edits or crafting custom workflows, these tools showcase how AI can elevate your coding game in ways you never thought possible.</p>\n<p><div class=\"d-flex justify-content-left\"><a class=\"cta_button_link btn-primary mb-24\" href=\"https://ignite.microsoft.com/en-US/sessions/BRK141?source=sessions\" target=\"_blank\">Watch the Ignite Session Here</a></div></p>\n<p>*Note: It will take 24-48 hours after the session for the recording to be uploaded.</p>\n<h2>1. Copilot Edits: Collaborative Iterations</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251496\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2.png\" alt=\"Copilot Edits showing inline chat edits, and Copilot Edits entry point\" width=\"1048\" height=\"620\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2.png 1429w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2-300x177.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2-1024x606.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-2-768x454.png 768w\" sizes=\"(max-width: 1048px) 100vw, 1048px\" /></p>\n<p>It was amazing to see Copilot Edits in action. This new editing surface is designed for seamless multi-file changes, making large-scale updates across your project feel effortless. Imagine needing to redesign your UI or implement logic that spans multiple files—Copilot handles it by generating a change plan tailored to your goals, without the usual headache of tracking dependencies manually.</p>\n<p>What makes this feature transformative is how Copilot analyzes your codebase, identifies the necessary edits through multiple files, and iterates on those changes while maintaining the context from your conversation history. And the best part? Visual Studio’s inline code previews let you review, modify, or accept suggestions directly in the IDE, making complex updates feel more like a smooth collaboration than a solo effort. This iterative approach ensures that Copilot evolves alongside your intentions, keeping you in control while streamlining your updates.</p>\n<h2>2. Vision: Code Smarter with Contextual Understanding</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251497\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-3.png\" alt=\"Picture of Copilot Chat with two screenshots in the prompt box (Vision)\" width=\"573\" height=\"400\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-3.png 573w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-3-300x209.png 300w\" sizes=\"(max-width: 573px) 100vw, 573px\" /></p>\n<p>This feature blew us away with its ability to process images and screenshots, allowing GitHub Copilot to instantly grasp your intentions, without the hassle of going back and forth, tediously describing UI changes.</p>\n<p>For instance, when updating a UI, you can simply paste screenshots of the current and desired states into Copilot. It analyzes the differences, determines the necessary changes, and suggests edits tailored to your goals. Vision bridges the gap between visual inputs and actionable suggestions, empowering developers to handle visually-oriented tasks with ease. It truly makes Copilot feel like a collaborative partner in your workflow.</p>\n<h2>3. Icebreakers: A Launchpad for Productivity</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251498\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-4.png\" alt=\"Icebreakers, 4 clickable prompts in the Copilot Chat window\" width=\"347\" height=\"431\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-4.png 347w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-4-242x300.png 242w\" sizes=\"(max-width: 347px) 100vw, 347px\" /></p>\n<p>We all know that getting started can sometimes feel like the hardest part, but Icebreakers make it so much easier. These curated starter prompts, like “Refactor my code” or “Add a new feature,” inspire action and guide your initial steps when facing common coding challenges. Seeing Scott demo how Icebreakers now support more complex, multi-step workflows was incredible. They seamlessly integrate with Copilot Edits, enabling actionable plans for even the most intricate tasks.</p>\n<p>Whether you&#8217;re navigating an unfamiliar codebase or tackling a large project, Icebreakers reduce cognitive load, giving you a clear starting point and boosting productivity right from the get-go. It was exciting to see how this feature now helps developers take control of complex tasks and move forward with confidence.</p>\n<h2>4. Function Calling: Bridging Gaps in Logic</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251499\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-5.png\" alt=\"A picture that describes how function calling work -- takes a vague prompt and finds references to fill in the gaps\" width=\"440\" height=\"418\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-5.png 440w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-5-300x285.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-5-24x24.png 24w\" sizes=\"(max-width: 440px) 100vw, 440px\" /></p>\n<p>Function Calling, which enhances GitHub Copilot&#8217;s ability to provide precise recommendations by automatically determining the relevant context and tools based on your natural language prompts. Copilot seamlessly integrates the necessary context, saving you time and effort.</p>\n<p>Function Calling streamlines the process by dynamically accessing open files and project structure, eliminating the need to manually specify paths. This makes debugging and integration faster and more efficient. Watching them demo this feature was a highlight, as they showed how quickly developers can go from idea to implementation with Copilot’s context-aware functionality!</p>\n<h2>5. Custom Instructions: Your Copilot, Your Way</h2>\n<p><img decoding=\"async\" class=\"alignnone wp-image-251500\" src=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6.png\" alt=\"Picture of copilot-instructions.md file and how it is referenced in a response. \" width=\"1430\" height=\"385\" srcset=\"https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6.png 1430w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6-300x81.png 300w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6-1024x276.png 1024w, https://devblogs.microsoft.com/visualstudio/wp-content/uploads/sites/4/2024/11/word-image-251478-6-768x207.png 768w\" sizes=\"(max-width: 1430px) 100vw, 1430px\" /></p>\n<p>Custom Instructions allow Copilot to adapt to your unique team workflow. No two teams are alike, and seeing Jessie demonstrate how you can fine-tune Copilot’s behavior to align with your team’s coding conventions and communication style was truly amazing!</p>\n<p>With Custom Instructions, you can add team-specific practices to your Copilot instructions file, ensuring consistency across your codebase. This feature is a game-changer for teams who want to make their workflow more efficient while ensuring alignment with best practices.</p>\n<h2>Your New Development Sidekick</h2>\n<p>The advancements showcased at Ignite reaffirm GitHub Copilot’s role as a transformative tool for developers. From simplifying multi-file edits to embracing team-specific workflows, these features show how AI can be both powerful and adaptable.</p>\n<p>Try these features in Visual Studio today and see how GitHub Copilot can help you code smarter, faster, and with more confidence.</p>\n<p>Which feature are you most excited to try? Let us know in the comments below!</p>\n<p><div class=\"d-flex justify-content-left\"><a class=\"cta_button_link btn-primary mb-24\" href=\"https://visualstudio.microsoft.com/downloads/\" target=\"_blank\">Download Visual Studio 2022</a></div></p>\n<p>The post <a href=\"https://devblogs.microsoft.com/visualstudio/top-5-github-copilot-features-in-visual-studio-from-microsoft-ignite-2024/\">Top 5 GitHub Copilot Features in Visual Studio from Microsoft Ignite 2024</a> appeared first on <a href=\"https://devblogs.microsoft.com/visualstudio\">Visual Studio Blog</a>.</p>\n",
      "Language": "en-US",
      "Link": "https://devblogs.microsoft.com/visualstudio/top-5-github-copilot-features-in-visual-studio-from-microsoft-ignite-2024/"
    }
  ]
}
